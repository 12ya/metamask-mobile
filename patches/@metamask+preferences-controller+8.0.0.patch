diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
index bfbfe66..c19399e 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
@@ -71,7 +71,8 @@ export declare type PreferencesState = {
     /**
      * Controls whether the OpenSea API is used
      */
-    openSeaEnabled: boolean;
+    displayNftMedia: boolean;
+    useSafeChainsListValidation: boolean,
     /**
      * Controls whether "security alerts" are enabled
      */
@@ -216,11 +217,16 @@ export declare class PreferencesController extends BaseController<typeof name, P
      */
     setUseNftDetection(useNftDetection: boolean): void;
     /**
-     * Toggle the opensea enabled setting.
+    * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
+     */
+    setDisplayNftMedia(displayNftMedia: boolean): void;
+    /**
+     * Toggle the use safe chains list validation.
+     * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
      */
-    setOpenSeaEnabled(openSeaEnabled: boolean): void;
+    setUseSafeChainsListValidation(useSafeChainsListValidation: boolean): void;
     /**
      * Toggle the security alert enabled setting.
      *
diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.js b/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
index 228cd90..51b48c7 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
@@ -18,7 +18,8 @@ const metadata = {
     isIpfsGatewayEnabled: { persist: true, anonymous: true },
     isMultiAccountBalancesEnabled: { persist: true, anonymous: true },
     lostIdentities: { persist: true, anonymous: false },
-    openSeaEnabled: { persist: true, anonymous: true },
+    displayNftMedia: { persist: true, anonymous: true },
+    useSafeChainsListValidation: { persist: true, anonymous: true },
     securityAlertsEnabled: { persist: true, anonymous: true },
     selectedAddress: { persist: true, anonymous: false },
     showTestNetworks: { persist: true, anonymous: true },
@@ -43,7 +44,7 @@ function getDefaultPreferencesState() {
         isIpfsGatewayEnabled: true,
         isMultiAccountBalancesEnabled: true,
         lostIdentities: {},
-        openSeaEnabled: false,
+        displayNftMedia: false,
         securityAlertsEnabled: false,
         selectedAddress: '',
         showIncomingTransactions: {
@@ -205,26 +206,39 @@ class PreferencesController extends base_controller_1.BaseController {
      * @param useNftDetection - Boolean indicating user preference on NFT detection.
      */
     setUseNftDetection(useNftDetection) {
-        if (useNftDetection && !this.state.openSeaEnabled) {
-            throw new Error('useNftDetection cannot be enabled if openSeaEnabled is false');
+        if (useNftDetection && !this.state.displayNftMedia) {
+            throw new Error('useNftDetection cannot be enabled if displayNftMedia is false');
         }
         this.update((state) => {
             state.useNftDetection = useNftDetection;
         });
     }
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     *  @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
      */
-    setOpenSeaEnabled(openSeaEnabled) {
+    setDisplayNftMedia(displayNftMedia) {
         this.update((state) => {
-            state.openSeaEnabled = openSeaEnabled;
-            if (!openSeaEnabled) {
+            state.displayNftMedia = displayNftMedia;
+            if (!displayNftMedia) {
                 state.useNftDetection = false;
             }
         });
     }
+
+    /**
+     * Toggle the use safe chains list validation.
+     *
+     * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
+     */
+    setUseSafeChainsListValidation(useSafeChainsListValidation) {
+      this.update({ useSafeChainsListValidation });
+      if (!useSafeChainsListValidation) {
+          this.update({ useSafeChainsListValidation: false });
+      }
+    }
+
     /**
      * Toggle the security alert enabled setting.
      *
