diff --git a/node_modules/@metamask/approval-controller/dist/.patch.txt b/node_modules/@metamask/approval-controller/dist/.patch.txt
new file mode 100644
index 0000000..550de56
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/.patch.txt
@@ -0,0 +1,7 @@
+PATCH GENERATED FROM MetaMask/core branch: patch/mobile-approval-controller-7-0-1
+This patch backports various transaction controller features from the main branch of MetaMask/core
+Steps to update patch:
+* Create a new core branch from: patch/mobile-approval-controller-7-0-1
+* Run "yarn build" in the core monorepo
+* Run "yarn patch:approval <core-directory>" in the mobile repo
+* Once the new patch is merged, add your changes to: patch/mobile-approval-controller-7-0-1
diff --git a/node_modules/@metamask/approval-controller/dist/ApprovalController.cjs.map b/node_modules/@metamask/approval-controller/dist/ApprovalController.cjs.map
deleted file mode 100644
index 48d3e33..0000000
--- a/node_modules/@metamask/approval-controller/dist/ApprovalController.cjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ApprovalController.cjs","sourceRoot":"","sources":["../src/ApprovalController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ControllerGetStateAction } from '@metamask/base-controller';\nimport {\n  BaseController,\n  type ControllerStateChangeEvent,\n  type RestrictedControllerMessenger,\n} from '@metamask/base-controller';\nimport type { JsonRpcError, DataWithOptionalCause } from '@metamask/rpc-errors';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, OptionalField } from '@metamask/utils';\nimport { nanoid } from 'nanoid';\n\nimport {\n  ApprovalRequestNotFoundError,\n  ApprovalRequestNoResultSupportError,\n  EndInvalidFlowError,\n  NoApprovalFlowsError,\n  MissingApprovalFlowError,\n} from './errors';\n\n// Constants\n\n// Avoiding dependency on controller-utils\nexport const ORIGIN_METAMASK = 'metamask';\nexport const APPROVAL_TYPE_RESULT_ERROR = 'result_error';\nexport const APPROVAL_TYPE_RESULT_SUCCESS = 'result_success';\n\nconst controllerName = 'ApprovalController';\n\nconst stateMetadata = {\n  pendingApprovals: { persist: false, anonymous: true },\n  pendingApprovalCount: { persist: false, anonymous: false },\n  approvalFlows: { persist: false, anonymous: false },\n};\n\nconst getAlreadyPendingMessage = (origin: string, type: string) =>\n  `Request of type '${type}' already pending for origin ${origin}. Please wait.`;\n\nconst getDefaultState = (): ApprovalControllerState => {\n  return {\n    pendingApprovals: {},\n    pendingApprovalCount: 0,\n    approvalFlows: [],\n  };\n};\n\n// Internal Types\n\ntype ApprovalPromiseResolve = (value?: unknown | AddResult) => void;\n\ntype ApprovalPromiseReject = (error?: unknown) => void;\n\ntype ApprovalRequestData = Record<string, Json> | null;\n\ntype ApprovalRequestState = Record<string, Json> | null;\n\ntype ApprovalCallbacks = {\n  resolve: ApprovalPromiseResolve;\n  reject: ApprovalPromiseReject;\n};\n\ntype ApprovalFlow = {\n  id: string;\n  loadingText: string | null;\n};\n\ntype ResultOptions = {\n  flowToEnd?: string;\n  header?: (string | ResultComponent)[];\n  icon?: string | null;\n  title?: string | null;\n};\n\n// Miscellaneous Types\n\nexport type ApprovalRequest<RequestData extends ApprovalRequestData> = {\n  /**\n   * The ID of the approval request.\n   */\n  id: string;\n\n  /**\n   * The origin of the approval request.\n   */\n  origin: string;\n\n  /**\n   * The time that the request was received, per Date.now().\n   */\n  time: number;\n\n  /**\n   * The type of the approval request.\n   * Unfortunately, not all values will match the `ApprovalType` enum, so we are using `string` here.\n   * TODO: Replace `string` with `ApprovalType` when all `type` values used by the clients can be encompassed by the `ApprovalType` enum.\n   */\n  type: string;\n\n  /**\n   * Additional data associated with the request.\n   */\n  requestData: RequestData;\n\n  /**\n   * Additional mutable state associated with the request\n   */\n  requestState: ApprovalRequestState;\n\n  /**\n   * Whether the request expects a result object to be returned instead of just the approval value.\n   */\n  expectsResult: boolean;\n};\n\nexport type ApprovalFlowState = ApprovalFlow;\n\nexport type ApprovalControllerState = {\n  pendingApprovals: Record<string, ApprovalRequest<Record<string, Json>>>;\n  pendingApprovalCount: number;\n  approvalFlows: ApprovalFlowState[];\n};\n\nexport type ApprovalControllerMessenger = RestrictedControllerMessenger<\n  typeof controllerName,\n  ApprovalControllerActions,\n  ApprovalControllerEvents,\n  never,\n  never\n>;\n\n// Option Types\n\nexport type ShowApprovalRequest = () => void | Promise<void>;\n\nexport type ResultComponent = {\n  /**\n   * A unique identifier for this instance of the component.\n   */\n  key: string;\n\n  /**\n   * The name of the component to render.\n   */\n  name: string;\n\n  /**\n   * Any properties required by the component.\n   */\n  properties?: Record<string, unknown>;\n\n  /**\n   * Any child components to render inside the component.\n   */\n  children?: string | ResultComponent | (string | ResultComponent)[];\n};\n\nexport type ApprovalControllerOptions = {\n  messenger: ApprovalControllerMessenger;\n  showApprovalRequest: ShowApprovalRequest;\n  state?: Partial<ApprovalControllerState>;\n  typesExcludedFromRateLimiting?: string[];\n};\n\nexport type AddApprovalOptions = {\n  id?: string;\n  origin: string;\n  type: string;\n  requestData?: Record<string, Json>;\n  requestState?: Record<string, Json>;\n  expectsResult?: boolean;\n};\n\nexport type UpdateRequestStateOptions = {\n  id: string;\n  requestState: Record<string, Json>;\n};\n\nexport type AcceptOptions = {\n  /**\n   * Whether to resolve the returned promise only when the request creator indicates the success of the\n   * post-approval logic using the result callbacks.\n   * If false or unspecified, the promise will resolve immediately.\n   */\n  waitForResult?: boolean;\n\n  /**\n   * Whether to delete the approval request after a result callback is called.\n   * If false or unspecified, the approval request will be deleted immediately.\n   * Ignored if `waitForResult` is false or unspecified.\n   */\n  deleteAfterResult?: boolean;\n};\n\nexport type StartFlowOptions = OptionalField<\n  ApprovalFlow,\n  'id' | 'loadingText'\n> & { show?: boolean };\n\nexport type EndFlowOptions = Pick<ApprovalFlow, 'id'>;\n\nexport type SetFlowLoadingTextOptions = ApprovalFlow;\n\nexport type SuccessOptions = ResultOptions & {\n  message?: string | ResultComponent | (string | ResultComponent)[];\n};\n\nexport type ErrorOptions = ResultOptions & {\n  error?: string | ResultComponent | (string | ResultComponent)[];\n};\n\n// Result Types\n\nexport type AcceptResultCallbacks = {\n  /**\n   * Inform the request acceptor that the post-approval logic was successful.\n   *\n   * @param value - An optional value generated by the post-approval logic.\n   */\n  success: (value?: unknown) => void;\n\n  /**\n   * Inform the request acceptor that the post-approval logic failed.\n   *\n   * @param error - The reason for the failure.\n   */\n  error: (error: Error) => void;\n};\n\nexport type AddResult = {\n  /**\n   * An optional value provided by the request acceptor.\n   */\n  value?: unknown;\n\n  /**\n   * Callback functions that must be used to indicate to the request acceptor whether the post-approval logic was successful or not.\n   * Will be undefined if the request acceptor did not specify that they want to wait for a result.\n   */\n  resultCallbacks?: AcceptResultCallbacks;\n};\n\nexport type AcceptResult = {\n  /**\n   * An optional value provided by the request creator when indicating a successful result.\n   */\n  value?: unknown;\n};\n\nexport type ApprovalFlowStartResult = ApprovalFlow;\n\nexport type SuccessResult = Record<string, never>;\n\nexport type ErrorResult = Record<string, never>;\n\n// Event Types\n\nexport type ApprovalStateChange = ControllerStateChangeEvent<\n  typeof controllerName,\n  ApprovalControllerState\n>;\n\nexport type ApprovalControllerEvents = ApprovalStateChange;\n\n// Action Types\n\nexport type GetApprovalsState = ControllerGetStateAction<\n  typeof controllerName,\n  ApprovalControllerState\n>;\n\nexport type ClearApprovalRequests = {\n  type: `${typeof controllerName}:clearRequests`;\n  handler: (error: JsonRpcError<DataWithOptionalCause>) => void;\n};\n\nexport type AddApprovalRequest = {\n  type: `${typeof controllerName}:addRequest`;\n  handler: (\n    opts: AddApprovalOptions,\n    shouldShowRequest: boolean,\n  ) => ReturnType<ApprovalController['add']>;\n};\n\nexport type HasApprovalRequest = {\n  type: `${typeof controllerName}:hasRequest`;\n  handler: ApprovalController['has'];\n};\n\nexport type AcceptRequest = {\n  type: `${typeof controllerName}:acceptRequest`;\n  handler: ApprovalController['accept'];\n};\n\nexport type RejectRequest = {\n  type: `${typeof controllerName}:rejectRequest`;\n  handler: ApprovalController['reject'];\n};\n\nexport type UpdateRequestState = {\n  type: `${typeof controllerName}:updateRequestState`;\n  handler: ApprovalController['updateRequestState'];\n};\n\nexport type StartFlow = {\n  type: `${typeof controllerName}:startFlow`;\n  handler: ApprovalController['startFlow'];\n};\n\nexport type EndFlow = {\n  type: `${typeof controllerName}:endFlow`;\n  handler: ApprovalController['endFlow'];\n};\n\nexport type SetFlowLoadingText = {\n  type: `${typeof controllerName}:setFlowLoadingText`;\n  handler: ApprovalController['setFlowLoadingText'];\n};\n\nexport type ShowSuccess = {\n  type: `${typeof controllerName}:showSuccess`;\n  handler: ApprovalController['success'];\n};\n\nexport type ShowError = {\n  type: `${typeof controllerName}:showError`;\n  handler: ApprovalController['error'];\n};\n\nexport type ApprovalControllerActions =\n  | GetApprovalsState\n  | ClearApprovalRequests\n  | AddApprovalRequest\n  | HasApprovalRequest\n  | AcceptRequest\n  | RejectRequest\n  | UpdateRequestState\n  | StartFlow\n  | EndFlow\n  | SetFlowLoadingText\n  | ShowSuccess\n  | ShowError;\n\n/**\n * Controller for managing requests that require user approval.\n *\n * Enables limiting the number of pending requests by origin and type, counting\n * pending requests, and more.\n *\n * Adding a request returns a promise that resolves or rejects when the request\n * is approved or denied, respectively.\n */\nexport class ApprovalController extends BaseController<\n  typeof controllerName,\n  ApprovalControllerState,\n  ApprovalControllerMessenger\n> {\n  #approvals: Map<string, ApprovalCallbacks>;\n\n  #origins: Map<string, Map<string, number>>;\n\n  #showApprovalRequest: () => void;\n\n  #typesExcludedFromRateLimiting: string[];\n\n  /**\n   * Construct an Approval controller.\n   *\n   * @param options - The controller options.\n   * @param options.showApprovalRequest - Function for opening the UI such that\n   * the request can be displayed to the user.\n   * @param options.messenger - The restricted controller messenger for the Approval controller.\n   * @param options.state - The initial controller state.\n   * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.\n   */\n  constructor({\n    messenger,\n    showApprovalRequest,\n    state = {},\n    typesExcludedFromRateLimiting = [],\n  }: ApprovalControllerOptions) {\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: { ...getDefaultState(), ...state },\n    });\n\n    this.#approvals = new Map();\n    this.#origins = new Map();\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.#showApprovalRequest = showApprovalRequest;\n    this.#typesExcludedFromRateLimiting = typesExcludedFromRateLimiting;\n    this.registerMessageHandlers();\n  }\n\n  /**\n   * Constructor helper for registering this controller's messaging system\n   * actions.\n   */\n  private registerMessageHandlers(): void {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearRequests` as const,\n      this.clear.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:addRequest` as const,\n      (opts: AddApprovalOptions, shouldShowRequest: boolean) => {\n        if (shouldShowRequest) {\n          return this.addAndShowApprovalRequest(opts);\n        }\n        return this.add(opts);\n      },\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasRequest` as const,\n      this.has.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:acceptRequest` as const,\n      this.accept.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:rejectRequest` as const,\n      this.reject.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateRequestState` as const,\n      this.updateRequestState.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:startFlow` as const,\n      this.startFlow.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:endFlow` as const,\n      this.endFlow.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:setFlowLoadingText` as const,\n      this.setFlowLoadingText.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showSuccess` as const,\n      this.success.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showError` as const,\n      this.error.bind(this),\n    );\n  }\n\n  /**\n   * Adds an approval request per the given arguments, calls the show approval\n   * request function, and returns the associated approval promise resolving to\n   * an AddResult object.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * @param opts.requestState - Additional state associated with the request,\n   * if any.\n   * @returns The approval promise resolving to an AddResult object.\n   */\n  addAndShowApprovalRequest(\n    opts: AddApprovalOptions & { expectsResult: true },\n  ): Promise<AddResult>;\n\n  /**\n   * Adds an approval request per the given arguments, calls the show approval\n   * request function, and returns the associated approval promise resolving\n   * to a value provided during acceptance.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * @param opts.requestState - Additional state associated with the request,\n   * if any.\n   * @returns The approval promise resolving to a value provided during acceptance.\n   */\n  addAndShowApprovalRequest(opts: AddApprovalOptions): Promise<unknown>;\n\n  addAndShowApprovalRequest(opts: AddApprovalOptions): Promise<unknown> {\n    const promise = this.#add(\n      opts.origin,\n      opts.type,\n      opts.id,\n      opts.requestData,\n      opts.requestState,\n      opts.expectsResult,\n    );\n    this.#showApprovalRequest();\n    return promise;\n  }\n\n  /**\n   * Adds an approval request per the given arguments and returns the approval\n   * promise resolving to an AddResult object.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * if any.\n   * @returns The approval promise resolving to an AddResult object.\n   */\n  add(opts: AddApprovalOptions & { expectsResult: true }): Promise<AddResult>;\n\n  /**\n   * Adds an approval request per the given arguments and returns the approval\n   * promise resolving to a value provided during acceptance.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * if any.\n   * @returns The approval promise resolving to a value provided during acceptance.\n   */\n  add(opts: AddApprovalOptions): Promise<unknown>;\n\n  add(opts: AddApprovalOptions): Promise<unknown | AddResult> {\n    return this.#add(\n      opts.origin,\n      opts.type,\n      opts.id,\n      opts.requestData,\n      opts.requestState,\n      opts.expectsResult,\n    );\n  }\n\n  /**\n   * Gets the info for the approval request with the given id.\n   *\n   * @param id - The id of the approval request.\n   * @returns The approval request data associated with the id.\n   */\n  get(id: string): ApprovalRequest<ApprovalRequestData> | undefined {\n    return this.state.pendingApprovals[id];\n  }\n\n  /**\n   * Gets the number of pending approvals, by origin and/or type.\n   *\n   * If only `origin` is specified, all approvals for that origin will be\n   * counted, regardless of type.\n   * If only `type` is specified, all approvals for that type will be counted,\n   * regardless of origin.\n   * If both `origin` and `type` are specified, 0 or 1 will be returned.\n   *\n   * @param opts - The approval count options.\n   * @param opts.origin - An approval origin.\n   * @param opts.type - The type of the approval request.\n   * @returns The current approval request count for the given origin and/or\n   * type.\n   */\n  getApprovalCount(opts: { origin?: string; type?: string } = {}): number {\n    if (!opts.origin && !opts.type) {\n      throw new Error('Must specify origin, type, or both.');\n    }\n    const { origin, type: _type } = opts;\n\n    if (origin && _type) {\n      return this.#origins.get(origin)?.get(_type) || 0;\n    }\n\n    if (origin) {\n      return Array.from(\n        (this.#origins.get(origin) || new Map()).values(),\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      ).reduce((total, value) => total + value, 0);\n    }\n\n    // Only \"type\" was specified\n    let count = 0;\n    for (const approval of Object.values(this.state.pendingApprovals)) {\n      if (approval.type === _type) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the total count of all pending approval requests for all origins.\n   *\n   * @returns The total pending approval request count.\n   */\n  getTotalApprovalCount(): number {\n    return this.state.pendingApprovalCount;\n  }\n\n  /**\n   * Checks if there's a pending approval request per the given parameters.\n   * At least one parameter must be specified. An error will be thrown if the\n   * parameters are invalid.\n   *\n   * If `id` is specified, all other parameters will be ignored.\n   * If `id` is not specified, the method will check for requests that match\n   * all of the specified parameters.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The ID to check for.\n   * @param opts.origin - The origin to check for.\n   * @param opts.type - The type to check for.\n   * @returns `true` if a matching approval is found, and `false` otherwise.\n   */\n  has(opts: { id?: string; origin?: string; type?: string } = {}): boolean {\n    const { id, origin, type: _type } = opts;\n\n    if (id) {\n      if (typeof id !== 'string') {\n        throw new Error('May not specify non-string id.');\n      }\n      return this.#approvals.has(id);\n    }\n\n    if (_type && typeof _type !== 'string') {\n      throw new Error('May not specify non-string type.');\n    }\n\n    if (origin) {\n      if (typeof origin !== 'string') {\n        throw new Error('May not specify non-string origin.');\n      }\n\n      // Check origin and type pair if type also specified\n      if (_type) {\n        return Boolean(this.#origins.get(origin)?.get(_type));\n      }\n      return this.#origins.has(origin);\n    }\n\n    if (_type) {\n      for (const approval of Object.values(this.state.pendingApprovals)) {\n        if (approval.type === _type) {\n          return true;\n        }\n      }\n      return false;\n    }\n    throw new Error(\n      'Must specify a valid combination of id, origin, and type.',\n    );\n  }\n\n  /**\n   * Resolves the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param value - The value to resolve the approval promise with.\n   * @param options - Options bag.\n   * @returns A promise that either resolves once a result is provided by\n   * the creator of the approval request, or immediately if `options.waitForResult`\n   * is `false` or `undefined`.\n   */\n  accept(\n    id: string,\n    value?: unknown,\n    options?: AcceptOptions,\n  ): Promise<AcceptResult> {\n    // Safe to cast as the delete method below will throw if the ID is not found\n    const approval = this.get(id) as ApprovalRequest<ApprovalRequestData>;\n    const requestPromise = this.#getCallbacks(id);\n    let requestDeleted = false;\n\n    if (!options?.deleteAfterResult || !options.waitForResult) {\n      this.#delete(id);\n      requestDeleted = true;\n    }\n\n    return new Promise<AcceptResult>((resolve, reject) => {\n      const resultCallbacks: AcceptResultCallbacks = {\n        success: (acceptValue?: unknown) => resolve({ value: acceptValue }),\n        error: reject,\n      };\n\n      if (options?.waitForResult && !approval.expectsResult) {\n        reject(new ApprovalRequestNoResultSupportError(id));\n        return;\n      }\n\n      const resultValue = options?.waitForResult ? resultCallbacks : undefined;\n\n      const resolveValue = approval.expectsResult\n        ? { value, resultCallbacks: resultValue }\n        : value;\n\n      requestPromise.resolve(resolveValue);\n\n      if (!options?.waitForResult) {\n        resolve({ value: undefined });\n      }\n    }).finally(() => {\n      if (!requestDeleted) {\n        this.#delete(id);\n      }\n    });\n  }\n\n  /**\n   * Rejects the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param error - The error to reject the approval promise with.\n   */\n  reject(id: string, error: unknown): void {\n    const callbacks = this.#getCallbacks(id);\n    this.#delete(id);\n    callbacks.reject(error);\n  }\n\n  /**\n   * Rejects and deletes all approval requests.\n   *\n   * @param rejectionError - The JsonRpcError to reject the approval\n   * requests with.\n   */\n  clear(rejectionError: JsonRpcError<DataWithOptionalCause>): void {\n    for (const id of this.#approvals.keys()) {\n      this.reject(id, rejectionError);\n    }\n    this.#origins.clear();\n    this.update((draftState) => {\n      draftState.pendingApprovals = {};\n      draftState.pendingApprovalCount = 0;\n    });\n  }\n\n  /**\n   * Updates the request state of the approval with the given id.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request.\n   * @param opts.requestState - Additional data associated with the request\n   */\n  updateRequestState(opts: UpdateRequestStateOptions): void {\n    if (!this.state.pendingApprovals[opts.id]) {\n      throw new ApprovalRequestNotFoundError(opts.id);\n    }\n\n    this.update((draftState) => {\n      draftState.pendingApprovals[opts.id].requestState =\n        opts.requestState as never;\n    });\n  }\n\n  /**\n   * Starts a new approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   * @param opts.show - A flag to determine whether the approval should show to the user.\n   * @returns The object containing the approval flow id.\n   */\n  startFlow(opts: StartFlowOptions = {}): ApprovalFlowStartResult {\n    const id = opts.id ?? nanoid();\n    const loadingText = opts.loadingText ?? null;\n\n    this.update((draftState) => {\n      draftState.approvalFlows.push({ id, loadingText });\n    });\n\n    // By default, if nothing else is specified, we always show the approval.\n    if (opts.show !== false) {\n      this.#showApprovalRequest();\n    }\n\n    return { id, loadingText };\n  }\n\n  /**\n   * Ends the current approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow that will be finished.\n   */\n  endFlow({ id }: EndFlowOptions) {\n    if (!this.state.approvalFlows.length) {\n      throw new NoApprovalFlowsError();\n    }\n\n    const currentFlow = this.state.approvalFlows.slice(-1)[0];\n\n    if (id !== currentFlow.id) {\n      throw new EndInvalidFlowError(\n        id,\n        this.state.approvalFlows.map((flow) => flow.id),\n      );\n    }\n\n    this.update((draftState) => {\n      draftState.approvalFlows.pop();\n    });\n  }\n\n  /**\n   * Sets the loading text for the approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The approval flow loading text that will be displayed.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   */\n  setFlowLoadingText({ id, loadingText }: SetFlowLoadingTextOptions) {\n    const flowIndex = this.state.approvalFlows.findIndex(\n      (flow) => flow.id === id,\n    );\n\n    if (flowIndex === -1) {\n      throw new MissingApprovalFlowError(id);\n    }\n\n    this.update((draftState) => {\n      draftState.approvalFlows[flowIndex].loadingText = loadingText;\n    });\n  }\n\n  /**\n   * Show a success page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async success(opts: SuccessOptions = {}): Promise<SuccessResult> {\n    await this.#result(APPROVAL_TYPE_RESULT_SUCCESS, opts, {\n      message: opts.message,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon,\n    } as Record<string, Json>);\n\n    return {};\n  }\n\n  /**\n   * Show an error page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async error(opts: ErrorOptions = {}): Promise<ErrorResult> {\n    await this.#result(APPROVAL_TYPE_RESULT_ERROR, opts, {\n      error: opts.error,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon,\n    } as Record<string, Json>);\n\n    return {};\n  }\n\n  /**\n   * Implementation of add operation.\n   *\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param id - The id of the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   * @param expectsResult - Whether the approval request expects a result object to be returned.\n   * @returns The approval promise.\n   */\n  #add(\n    origin: string,\n    type: string,\n    id: string = nanoid(),\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n    expectsResult?: boolean,\n  ): Promise<unknown | AddResult> {\n    this.#validateAddParams(id, origin, type, requestData, requestState);\n\n    if (\n      !this.#typesExcludedFromRateLimiting.includes(type) &&\n      this.has({ origin, type })\n    ) {\n      throw rpcErrors.resourceUnavailable(\n        getAlreadyPendingMessage(origin, type),\n      );\n    }\n\n    // add pending approval\n    return new Promise((resolve, reject) => {\n      this.#approvals.set(id, { resolve, reject });\n      this.#addPendingApprovalOrigin(origin, type);\n\n      this.#addToStore(\n        id,\n        origin,\n        type,\n        requestData,\n        requestState,\n        expectsResult,\n      );\n    });\n  }\n\n  /**\n   * Validates parameters to the add method.\n   *\n   * @param id - The id of the approval request.\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   */\n  #validateAddParams(\n    id: string,\n    origin: string,\n    type: string,\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n  ): void {\n    let errorMessage = null;\n    if (!id || typeof id !== 'string') {\n      errorMessage = 'Must specify non-empty string id.';\n    } else if (this.#approvals.has(id)) {\n      errorMessage = `Approval request with id '${id}' already exists.`;\n    } else if (!origin || typeof origin !== 'string') {\n      errorMessage = 'Must specify non-empty string origin.';\n    } else if (!type || typeof type !== 'string') {\n      errorMessage = 'Must specify non-empty string type.';\n    } else if (\n      requestData &&\n      (typeof requestData !== 'object' || Array.isArray(requestData))\n    ) {\n      errorMessage = 'Request data must be a plain object if specified.';\n    } else if (\n      requestState &&\n      (typeof requestState !== 'object' || Array.isArray(requestState))\n    ) {\n      errorMessage = 'Request state must be a plain object if specified.';\n    }\n\n    if (errorMessage) {\n      throw rpcErrors.internal(errorMessage);\n    }\n  }\n\n  /**\n   * Adds an entry to _origins.\n   * Performs no validation.\n   *\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   */\n  #addPendingApprovalOrigin(origin: string, type: string): void {\n    let originMap = this.#origins.get(origin);\n\n    if (!originMap) {\n      originMap = new Map();\n      this.#origins.set(origin, originMap);\n    }\n\n    const currentValue = originMap.get(type) || 0;\n    originMap.set(type, currentValue + 1);\n  }\n\n  /**\n   * Adds an entry to the store.\n   * Performs no validation.\n   *\n   * @param id - The id of the approval request.\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   * @param expectsResult - Whether the request expects a result object to be returned.\n   */\n  #addToStore(\n    id: string,\n    origin: string,\n    type: string,\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n    expectsResult?: boolean,\n  ): void {\n    const approval = {\n      id,\n      origin,\n      type,\n      time: Date.now(),\n      requestData: requestData || null,\n      requestState: requestState || null,\n      expectsResult: expectsResult || false,\n    };\n\n    this.update((draftState) => {\n      draftState.pendingApprovals[id] = approval as never;\n\n      draftState.pendingApprovalCount = Object.keys(\n        draftState.pendingApprovals,\n      ).length;\n    });\n  }\n\n  /**\n   * Deletes the approval with the given id.\n   *\n   * Deletion is an internal operation because approval state is solely\n   * managed by this controller.\n   *\n   * @param id - The id of the approval request to be deleted.\n   */\n  #delete(id: string): void {\n    if (!this.#approvals.has(id)) {\n      throw new ApprovalRequestNotFoundError(id);\n    }\n\n    this.#approvals.delete(id);\n\n    const { origin, type } = this.state.pendingApprovals[id];\n\n    const originMap = this.#origins.get(origin) as Map<string, number>;\n    const originTotalCount = this.getApprovalCount({ origin });\n    const originTypeCount = originMap.get(type) as number;\n\n    if (originTotalCount === 1) {\n      this.#origins.delete(origin);\n    } else {\n      originMap.set(type, originTypeCount - 1);\n    }\n\n    this.update((draftState) => {\n      delete draftState.pendingApprovals[id];\n      draftState.pendingApprovalCount = Object.keys(\n        draftState.pendingApprovals,\n      ).length;\n    });\n  }\n\n  #getCallbacks(id: string): ApprovalCallbacks {\n    const callbacks = this.#approvals.get(id);\n\n    if (!callbacks) {\n      throw new ApprovalRequestNotFoundError(id);\n    }\n\n    return callbacks;\n  }\n\n  async #result(\n    type: string,\n    opts: ResultOptions,\n    requestData: Record<string, Json>,\n  ) {\n    try {\n      await this.addAndShowApprovalRequest({\n        origin: ORIGIN_METAMASK,\n        type,\n        requestData,\n      });\n    } catch (error) {\n      console.info('Failed to display result page', error);\n    } finally {\n      if (opts.flowToEnd) {\n        try {\n          this.endFlow({ id: opts.flowToEnd });\n        } catch (error) {\n          console.info('Failed to end flow', { id: opts.flowToEnd, error });\n        }\n      }\n    }\n  }\n}\n\nexport default ApprovalController;\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/ApprovalController.d.cts.map b/node_modules/@metamask/approval-controller/dist/ApprovalController.d.cts.map
deleted file mode 100644
index 18691ff..0000000
--- a/node_modules/@metamask/approval-controller/dist/ApprovalController.d.cts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ApprovalController.d.cts","sourceRoot":"","sources":["../src/ApprovalController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/ApprovalController.d.mts.map b/node_modules/@metamask/approval-controller/dist/ApprovalController.d.mts.map
deleted file mode 100644
index 4b8a955..0000000
--- a/node_modules/@metamask/approval-controller/dist/ApprovalController.d.mts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ApprovalController.d.mts","sourceRoot":"","sources":["../src/ApprovalController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/ApprovalController.js b/node_modules/@metamask/approval-controller/dist/ApprovalController.js
new file mode 100644
index 0000000..21178e9
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/ApprovalController.js
@@ -0,0 +1,16 @@
+"use strict";Object.defineProperty(exports, "__esModule", {value: true});
+
+
+
+
+
+var _chunkPMXPCCKSjs = require('./chunk-PMXPCCKS.js');
+require('./chunk-LKCXZAKD.js');
+
+
+
+
+
+
+exports.APPROVAL_TYPE_RESULT_ERROR = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_ERROR; exports.APPROVAL_TYPE_RESULT_SUCCESS = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_SUCCESS; exports.ApprovalController = _chunkPMXPCCKSjs.ApprovalController; exports.ORIGIN_METAMASK = _chunkPMXPCCKSjs.ORIGIN_METAMASK; exports.default = _chunkPMXPCCKSjs.ApprovalController_default;
+//# sourceMappingURL=ApprovalController.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/ApprovalController.mjs.map b/node_modules/@metamask/approval-controller/dist/ApprovalController.mjs.map
deleted file mode 100644
index 5e014c4..0000000
--- a/node_modules/@metamask/approval-controller/dist/ApprovalController.mjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ApprovalController.mjs","sourceRoot":"","sources":["../src/ApprovalController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ControllerGetStateAction } from '@metamask/base-controller';\nimport {\n  BaseController,\n  type ControllerStateChangeEvent,\n  type RestrictedControllerMessenger,\n} from '@metamask/base-controller';\nimport type { JsonRpcError, DataWithOptionalCause } from '@metamask/rpc-errors';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, OptionalField } from '@metamask/utils';\nimport { nanoid } from 'nanoid';\n\nimport {\n  ApprovalRequestNotFoundError,\n  ApprovalRequestNoResultSupportError,\n  EndInvalidFlowError,\n  NoApprovalFlowsError,\n  MissingApprovalFlowError,\n} from './errors';\n\n// Constants\n\n// Avoiding dependency on controller-utils\nexport const ORIGIN_METAMASK = 'metamask';\nexport const APPROVAL_TYPE_RESULT_ERROR = 'result_error';\nexport const APPROVAL_TYPE_RESULT_SUCCESS = 'result_success';\n\nconst controllerName = 'ApprovalController';\n\nconst stateMetadata = {\n  pendingApprovals: { persist: false, anonymous: true },\n  pendingApprovalCount: { persist: false, anonymous: false },\n  approvalFlows: { persist: false, anonymous: false },\n};\n\nconst getAlreadyPendingMessage = (origin: string, type: string) =>\n  `Request of type '${type}' already pending for origin ${origin}. Please wait.`;\n\nconst getDefaultState = (): ApprovalControllerState => {\n  return {\n    pendingApprovals: {},\n    pendingApprovalCount: 0,\n    approvalFlows: [],\n  };\n};\n\n// Internal Types\n\ntype ApprovalPromiseResolve = (value?: unknown | AddResult) => void;\n\ntype ApprovalPromiseReject = (error?: unknown) => void;\n\ntype ApprovalRequestData = Record<string, Json> | null;\n\ntype ApprovalRequestState = Record<string, Json> | null;\n\ntype ApprovalCallbacks = {\n  resolve: ApprovalPromiseResolve;\n  reject: ApprovalPromiseReject;\n};\n\ntype ApprovalFlow = {\n  id: string;\n  loadingText: string | null;\n};\n\ntype ResultOptions = {\n  flowToEnd?: string;\n  header?: (string | ResultComponent)[];\n  icon?: string | null;\n  title?: string | null;\n};\n\n// Miscellaneous Types\n\nexport type ApprovalRequest<RequestData extends ApprovalRequestData> = {\n  /**\n   * The ID of the approval request.\n   */\n  id: string;\n\n  /**\n   * The origin of the approval request.\n   */\n  origin: string;\n\n  /**\n   * The time that the request was received, per Date.now().\n   */\n  time: number;\n\n  /**\n   * The type of the approval request.\n   * Unfortunately, not all values will match the `ApprovalType` enum, so we are using `string` here.\n   * TODO: Replace `string` with `ApprovalType` when all `type` values used by the clients can be encompassed by the `ApprovalType` enum.\n   */\n  type: string;\n\n  /**\n   * Additional data associated with the request.\n   */\n  requestData: RequestData;\n\n  /**\n   * Additional mutable state associated with the request\n   */\n  requestState: ApprovalRequestState;\n\n  /**\n   * Whether the request expects a result object to be returned instead of just the approval value.\n   */\n  expectsResult: boolean;\n};\n\nexport type ApprovalFlowState = ApprovalFlow;\n\nexport type ApprovalControllerState = {\n  pendingApprovals: Record<string, ApprovalRequest<Record<string, Json>>>;\n  pendingApprovalCount: number;\n  approvalFlows: ApprovalFlowState[];\n};\n\nexport type ApprovalControllerMessenger = RestrictedControllerMessenger<\n  typeof controllerName,\n  ApprovalControllerActions,\n  ApprovalControllerEvents,\n  never,\n  never\n>;\n\n// Option Types\n\nexport type ShowApprovalRequest = () => void | Promise<void>;\n\nexport type ResultComponent = {\n  /**\n   * A unique identifier for this instance of the component.\n   */\n  key: string;\n\n  /**\n   * The name of the component to render.\n   */\n  name: string;\n\n  /**\n   * Any properties required by the component.\n   */\n  properties?: Record<string, unknown>;\n\n  /**\n   * Any child components to render inside the component.\n   */\n  children?: string | ResultComponent | (string | ResultComponent)[];\n};\n\nexport type ApprovalControllerOptions = {\n  messenger: ApprovalControllerMessenger;\n  showApprovalRequest: ShowApprovalRequest;\n  state?: Partial<ApprovalControllerState>;\n  typesExcludedFromRateLimiting?: string[];\n};\n\nexport type AddApprovalOptions = {\n  id?: string;\n  origin: string;\n  type: string;\n  requestData?: Record<string, Json>;\n  requestState?: Record<string, Json>;\n  expectsResult?: boolean;\n};\n\nexport type UpdateRequestStateOptions = {\n  id: string;\n  requestState: Record<string, Json>;\n};\n\nexport type AcceptOptions = {\n  /**\n   * Whether to resolve the returned promise only when the request creator indicates the success of the\n   * post-approval logic using the result callbacks.\n   * If false or unspecified, the promise will resolve immediately.\n   */\n  waitForResult?: boolean;\n\n  /**\n   * Whether to delete the approval request after a result callback is called.\n   * If false or unspecified, the approval request will be deleted immediately.\n   * Ignored if `waitForResult` is false or unspecified.\n   */\n  deleteAfterResult?: boolean;\n};\n\nexport type StartFlowOptions = OptionalField<\n  ApprovalFlow,\n  'id' | 'loadingText'\n> & { show?: boolean };\n\nexport type EndFlowOptions = Pick<ApprovalFlow, 'id'>;\n\nexport type SetFlowLoadingTextOptions = ApprovalFlow;\n\nexport type SuccessOptions = ResultOptions & {\n  message?: string | ResultComponent | (string | ResultComponent)[];\n};\n\nexport type ErrorOptions = ResultOptions & {\n  error?: string | ResultComponent | (string | ResultComponent)[];\n};\n\n// Result Types\n\nexport type AcceptResultCallbacks = {\n  /**\n   * Inform the request acceptor that the post-approval logic was successful.\n   *\n   * @param value - An optional value generated by the post-approval logic.\n   */\n  success: (value?: unknown) => void;\n\n  /**\n   * Inform the request acceptor that the post-approval logic failed.\n   *\n   * @param error - The reason for the failure.\n   */\n  error: (error: Error) => void;\n};\n\nexport type AddResult = {\n  /**\n   * An optional value provided by the request acceptor.\n   */\n  value?: unknown;\n\n  /**\n   * Callback functions that must be used to indicate to the request acceptor whether the post-approval logic was successful or not.\n   * Will be undefined if the request acceptor did not specify that they want to wait for a result.\n   */\n  resultCallbacks?: AcceptResultCallbacks;\n};\n\nexport type AcceptResult = {\n  /**\n   * An optional value provided by the request creator when indicating a successful result.\n   */\n  value?: unknown;\n};\n\nexport type ApprovalFlowStartResult = ApprovalFlow;\n\nexport type SuccessResult = Record<string, never>;\n\nexport type ErrorResult = Record<string, never>;\n\n// Event Types\n\nexport type ApprovalStateChange = ControllerStateChangeEvent<\n  typeof controllerName,\n  ApprovalControllerState\n>;\n\nexport type ApprovalControllerEvents = ApprovalStateChange;\n\n// Action Types\n\nexport type GetApprovalsState = ControllerGetStateAction<\n  typeof controllerName,\n  ApprovalControllerState\n>;\n\nexport type ClearApprovalRequests = {\n  type: `${typeof controllerName}:clearRequests`;\n  handler: (error: JsonRpcError<DataWithOptionalCause>) => void;\n};\n\nexport type AddApprovalRequest = {\n  type: `${typeof controllerName}:addRequest`;\n  handler: (\n    opts: AddApprovalOptions,\n    shouldShowRequest: boolean,\n  ) => ReturnType<ApprovalController['add']>;\n};\n\nexport type HasApprovalRequest = {\n  type: `${typeof controllerName}:hasRequest`;\n  handler: ApprovalController['has'];\n};\n\nexport type AcceptRequest = {\n  type: `${typeof controllerName}:acceptRequest`;\n  handler: ApprovalController['accept'];\n};\n\nexport type RejectRequest = {\n  type: `${typeof controllerName}:rejectRequest`;\n  handler: ApprovalController['reject'];\n};\n\nexport type UpdateRequestState = {\n  type: `${typeof controllerName}:updateRequestState`;\n  handler: ApprovalController['updateRequestState'];\n};\n\nexport type StartFlow = {\n  type: `${typeof controllerName}:startFlow`;\n  handler: ApprovalController['startFlow'];\n};\n\nexport type EndFlow = {\n  type: `${typeof controllerName}:endFlow`;\n  handler: ApprovalController['endFlow'];\n};\n\nexport type SetFlowLoadingText = {\n  type: `${typeof controllerName}:setFlowLoadingText`;\n  handler: ApprovalController['setFlowLoadingText'];\n};\n\nexport type ShowSuccess = {\n  type: `${typeof controllerName}:showSuccess`;\n  handler: ApprovalController['success'];\n};\n\nexport type ShowError = {\n  type: `${typeof controllerName}:showError`;\n  handler: ApprovalController['error'];\n};\n\nexport type ApprovalControllerActions =\n  | GetApprovalsState\n  | ClearApprovalRequests\n  | AddApprovalRequest\n  | HasApprovalRequest\n  | AcceptRequest\n  | RejectRequest\n  | UpdateRequestState\n  | StartFlow\n  | EndFlow\n  | SetFlowLoadingText\n  | ShowSuccess\n  | ShowError;\n\n/**\n * Controller for managing requests that require user approval.\n *\n * Enables limiting the number of pending requests by origin and type, counting\n * pending requests, and more.\n *\n * Adding a request returns a promise that resolves or rejects when the request\n * is approved or denied, respectively.\n */\nexport class ApprovalController extends BaseController<\n  typeof controllerName,\n  ApprovalControllerState,\n  ApprovalControllerMessenger\n> {\n  #approvals: Map<string, ApprovalCallbacks>;\n\n  #origins: Map<string, Map<string, number>>;\n\n  #showApprovalRequest: () => void;\n\n  #typesExcludedFromRateLimiting: string[];\n\n  /**\n   * Construct an Approval controller.\n   *\n   * @param options - The controller options.\n   * @param options.showApprovalRequest - Function for opening the UI such that\n   * the request can be displayed to the user.\n   * @param options.messenger - The restricted controller messenger for the Approval controller.\n   * @param options.state - The initial controller state.\n   * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.\n   */\n  constructor({\n    messenger,\n    showApprovalRequest,\n    state = {},\n    typesExcludedFromRateLimiting = [],\n  }: ApprovalControllerOptions) {\n    super({\n      name: controllerName,\n      metadata: stateMetadata,\n      messenger,\n      state: { ...getDefaultState(), ...state },\n    });\n\n    this.#approvals = new Map();\n    this.#origins = new Map();\n    // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.#showApprovalRequest = showApprovalRequest;\n    this.#typesExcludedFromRateLimiting = typesExcludedFromRateLimiting;\n    this.registerMessageHandlers();\n  }\n\n  /**\n   * Constructor helper for registering this controller's messaging system\n   * actions.\n   */\n  private registerMessageHandlers(): void {\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:clearRequests` as const,\n      this.clear.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:addRequest` as const,\n      (opts: AddApprovalOptions, shouldShowRequest: boolean) => {\n        if (shouldShowRequest) {\n          return this.addAndShowApprovalRequest(opts);\n        }\n        return this.add(opts);\n      },\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:hasRequest` as const,\n      this.has.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:acceptRequest` as const,\n      this.accept.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:rejectRequest` as const,\n      this.reject.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:updateRequestState` as const,\n      this.updateRequestState.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:startFlow` as const,\n      this.startFlow.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:endFlow` as const,\n      this.endFlow.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:setFlowLoadingText` as const,\n      this.setFlowLoadingText.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showSuccess` as const,\n      this.success.bind(this),\n    );\n\n    this.messagingSystem.registerActionHandler(\n      `${controllerName}:showError` as const,\n      this.error.bind(this),\n    );\n  }\n\n  /**\n   * Adds an approval request per the given arguments, calls the show approval\n   * request function, and returns the associated approval promise resolving to\n   * an AddResult object.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * @param opts.requestState - Additional state associated with the request,\n   * if any.\n   * @returns The approval promise resolving to an AddResult object.\n   */\n  addAndShowApprovalRequest(\n    opts: AddApprovalOptions & { expectsResult: true },\n  ): Promise<AddResult>;\n\n  /**\n   * Adds an approval request per the given arguments, calls the show approval\n   * request function, and returns the associated approval promise resolving\n   * to a value provided during acceptance.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * @param opts.requestState - Additional state associated with the request,\n   * if any.\n   * @returns The approval promise resolving to a value provided during acceptance.\n   */\n  addAndShowApprovalRequest(opts: AddApprovalOptions): Promise<unknown>;\n\n  addAndShowApprovalRequest(opts: AddApprovalOptions): Promise<unknown> {\n    const promise = this.#add(\n      opts.origin,\n      opts.type,\n      opts.id,\n      opts.requestData,\n      opts.requestState,\n      opts.expectsResult,\n    );\n    this.#showApprovalRequest();\n    return promise;\n  }\n\n  /**\n   * Adds an approval request per the given arguments and returns the approval\n   * promise resolving to an AddResult object.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * if any.\n   * @returns The approval promise resolving to an AddResult object.\n   */\n  add(opts: AddApprovalOptions & { expectsResult: true }): Promise<AddResult>;\n\n  /**\n   * Adds an approval request per the given arguments and returns the approval\n   * promise resolving to a value provided during acceptance.\n   *\n   * There can only be one approval per origin and type. An error is thrown if\n   * attempting to add an invalid or duplicate request.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request. A random id will be\n   * generated if none is provided.\n   * @param opts.origin - The origin of the approval request.\n   * @param opts.type - The type associated with the approval request.\n   * @param opts.requestData - Additional data associated with the request,\n   * if any.\n   * @returns The approval promise resolving to a value provided during acceptance.\n   */\n  add(opts: AddApprovalOptions): Promise<unknown>;\n\n  add(opts: AddApprovalOptions): Promise<unknown | AddResult> {\n    return this.#add(\n      opts.origin,\n      opts.type,\n      opts.id,\n      opts.requestData,\n      opts.requestState,\n      opts.expectsResult,\n    );\n  }\n\n  /**\n   * Gets the info for the approval request with the given id.\n   *\n   * @param id - The id of the approval request.\n   * @returns The approval request data associated with the id.\n   */\n  get(id: string): ApprovalRequest<ApprovalRequestData> | undefined {\n    return this.state.pendingApprovals[id];\n  }\n\n  /**\n   * Gets the number of pending approvals, by origin and/or type.\n   *\n   * If only `origin` is specified, all approvals for that origin will be\n   * counted, regardless of type.\n   * If only `type` is specified, all approvals for that type will be counted,\n   * regardless of origin.\n   * If both `origin` and `type` are specified, 0 or 1 will be returned.\n   *\n   * @param opts - The approval count options.\n   * @param opts.origin - An approval origin.\n   * @param opts.type - The type of the approval request.\n   * @returns The current approval request count for the given origin and/or\n   * type.\n   */\n  getApprovalCount(opts: { origin?: string; type?: string } = {}): number {\n    if (!opts.origin && !opts.type) {\n      throw new Error('Must specify origin, type, or both.');\n    }\n    const { origin, type: _type } = opts;\n\n    if (origin && _type) {\n      return this.#origins.get(origin)?.get(_type) || 0;\n    }\n\n    if (origin) {\n      return Array.from(\n        (this.#origins.get(origin) || new Map()).values(),\n        // TODO: Either fix this lint violation or explain why it's necessary to ignore.\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      ).reduce((total, value) => total + value, 0);\n    }\n\n    // Only \"type\" was specified\n    let count = 0;\n    for (const approval of Object.values(this.state.pendingApprovals)) {\n      if (approval.type === _type) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the total count of all pending approval requests for all origins.\n   *\n   * @returns The total pending approval request count.\n   */\n  getTotalApprovalCount(): number {\n    return this.state.pendingApprovalCount;\n  }\n\n  /**\n   * Checks if there's a pending approval request per the given parameters.\n   * At least one parameter must be specified. An error will be thrown if the\n   * parameters are invalid.\n   *\n   * If `id` is specified, all other parameters will be ignored.\n   * If `id` is not specified, the method will check for requests that match\n   * all of the specified parameters.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The ID to check for.\n   * @param opts.origin - The origin to check for.\n   * @param opts.type - The type to check for.\n   * @returns `true` if a matching approval is found, and `false` otherwise.\n   */\n  has(opts: { id?: string; origin?: string; type?: string } = {}): boolean {\n    const { id, origin, type: _type } = opts;\n\n    if (id) {\n      if (typeof id !== 'string') {\n        throw new Error('May not specify non-string id.');\n      }\n      return this.#approvals.has(id);\n    }\n\n    if (_type && typeof _type !== 'string') {\n      throw new Error('May not specify non-string type.');\n    }\n\n    if (origin) {\n      if (typeof origin !== 'string') {\n        throw new Error('May not specify non-string origin.');\n      }\n\n      // Check origin and type pair if type also specified\n      if (_type) {\n        return Boolean(this.#origins.get(origin)?.get(_type));\n      }\n      return this.#origins.has(origin);\n    }\n\n    if (_type) {\n      for (const approval of Object.values(this.state.pendingApprovals)) {\n        if (approval.type === _type) {\n          return true;\n        }\n      }\n      return false;\n    }\n    throw new Error(\n      'Must specify a valid combination of id, origin, and type.',\n    );\n  }\n\n  /**\n   * Resolves the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param value - The value to resolve the approval promise with.\n   * @param options - Options bag.\n   * @returns A promise that either resolves once a result is provided by\n   * the creator of the approval request, or immediately if `options.waitForResult`\n   * is `false` or `undefined`.\n   */\n  accept(\n    id: string,\n    value?: unknown,\n    options?: AcceptOptions,\n  ): Promise<AcceptResult> {\n    // Safe to cast as the delete method below will throw if the ID is not found\n    const approval = this.get(id) as ApprovalRequest<ApprovalRequestData>;\n    const requestPromise = this.#getCallbacks(id);\n    let requestDeleted = false;\n\n    if (!options?.deleteAfterResult || !options.waitForResult) {\n      this.#delete(id);\n      requestDeleted = true;\n    }\n\n    return new Promise<AcceptResult>((resolve, reject) => {\n      const resultCallbacks: AcceptResultCallbacks = {\n        success: (acceptValue?: unknown) => resolve({ value: acceptValue }),\n        error: reject,\n      };\n\n      if (options?.waitForResult && !approval.expectsResult) {\n        reject(new ApprovalRequestNoResultSupportError(id));\n        return;\n      }\n\n      const resultValue = options?.waitForResult ? resultCallbacks : undefined;\n\n      const resolveValue = approval.expectsResult\n        ? { value, resultCallbacks: resultValue }\n        : value;\n\n      requestPromise.resolve(resolveValue);\n\n      if (!options?.waitForResult) {\n        resolve({ value: undefined });\n      }\n    }).finally(() => {\n      if (!requestDeleted) {\n        this.#delete(id);\n      }\n    });\n  }\n\n  /**\n   * Rejects the promise of the approval with the given id, and deletes the\n   * approval. Throws an error if no such approval exists.\n   *\n   * @param id - The id of the approval request.\n   * @param error - The error to reject the approval promise with.\n   */\n  reject(id: string, error: unknown): void {\n    const callbacks = this.#getCallbacks(id);\n    this.#delete(id);\n    callbacks.reject(error);\n  }\n\n  /**\n   * Rejects and deletes all approval requests.\n   *\n   * @param rejectionError - The JsonRpcError to reject the approval\n   * requests with.\n   */\n  clear(rejectionError: JsonRpcError<DataWithOptionalCause>): void {\n    for (const id of this.#approvals.keys()) {\n      this.reject(id, rejectionError);\n    }\n    this.#origins.clear();\n    this.update((draftState) => {\n      draftState.pendingApprovals = {};\n      draftState.pendingApprovalCount = 0;\n    });\n  }\n\n  /**\n   * Updates the request state of the approval with the given id.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval request.\n   * @param opts.requestState - Additional data associated with the request\n   */\n  updateRequestState(opts: UpdateRequestStateOptions): void {\n    if (!this.state.pendingApprovals[opts.id]) {\n      throw new ApprovalRequestNotFoundError(opts.id);\n    }\n\n    this.update((draftState) => {\n      draftState.pendingApprovals[opts.id].requestState =\n        opts.requestState as never;\n    });\n  }\n\n  /**\n   * Starts a new approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   * @param opts.show - A flag to determine whether the approval should show to the user.\n   * @returns The object containing the approval flow id.\n   */\n  startFlow(opts: StartFlowOptions = {}): ApprovalFlowStartResult {\n    const id = opts.id ?? nanoid();\n    const loadingText = opts.loadingText ?? null;\n\n    this.update((draftState) => {\n      draftState.approvalFlows.push({ id, loadingText });\n    });\n\n    // By default, if nothing else is specified, we always show the approval.\n    if (opts.show !== false) {\n      this.#showApprovalRequest();\n    }\n\n    return { id, loadingText };\n  }\n\n  /**\n   * Ends the current approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The id of the approval flow that will be finished.\n   */\n  endFlow({ id }: EndFlowOptions) {\n    if (!this.state.approvalFlows.length) {\n      throw new NoApprovalFlowsError();\n    }\n\n    const currentFlow = this.state.approvalFlows.slice(-1)[0];\n\n    if (id !== currentFlow.id) {\n      throw new EndInvalidFlowError(\n        id,\n        this.state.approvalFlows.map((flow) => flow.id),\n      );\n    }\n\n    this.update((draftState) => {\n      draftState.approvalFlows.pop();\n    });\n  }\n\n  /**\n   * Sets the loading text for the approval flow.\n   *\n   * @param opts - Options bag.\n   * @param opts.id - The approval flow loading text that will be displayed.\n   * @param opts.loadingText - The loading text that will be associated to the approval flow.\n   */\n  setFlowLoadingText({ id, loadingText }: SetFlowLoadingTextOptions) {\n    const flowIndex = this.state.approvalFlows.findIndex(\n      (flow) => flow.id === id,\n    );\n\n    if (flowIndex === -1) {\n      throw new MissingApprovalFlowError(id);\n    }\n\n    this.update((draftState) => {\n      draftState.approvalFlows[flowIndex].loadingText = loadingText;\n    });\n  }\n\n  /**\n   * Show a success page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async success(opts: SuccessOptions = {}): Promise<SuccessResult> {\n    await this.#result(APPROVAL_TYPE_RESULT_SUCCESS, opts, {\n      message: opts.message,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon,\n    } as Record<string, Json>);\n\n    return {};\n  }\n\n  /**\n   * Show an error page.\n   *\n   * @param opts - Options bag.\n   * @param opts.message - The message text or components to display in the page.\n   * @param opts.header - The text or components to display in the header of the page.\n   * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.\n   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.\n   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.\n   * @returns Empty object to support future additions.\n   */\n  async error(opts: ErrorOptions = {}): Promise<ErrorResult> {\n    await this.#result(APPROVAL_TYPE_RESULT_ERROR, opts, {\n      error: opts.error,\n      header: opts.header,\n      title: opts.title,\n      icon: opts.icon,\n    } as Record<string, Json>);\n\n    return {};\n  }\n\n  /**\n   * Implementation of add operation.\n   *\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param id - The id of the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   * @param expectsResult - Whether the approval request expects a result object to be returned.\n   * @returns The approval promise.\n   */\n  #add(\n    origin: string,\n    type: string,\n    id: string = nanoid(),\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n    expectsResult?: boolean,\n  ): Promise<unknown | AddResult> {\n    this.#validateAddParams(id, origin, type, requestData, requestState);\n\n    if (\n      !this.#typesExcludedFromRateLimiting.includes(type) &&\n      this.has({ origin, type })\n    ) {\n      throw rpcErrors.resourceUnavailable(\n        getAlreadyPendingMessage(origin, type),\n      );\n    }\n\n    // add pending approval\n    return new Promise((resolve, reject) => {\n      this.#approvals.set(id, { resolve, reject });\n      this.#addPendingApprovalOrigin(origin, type);\n\n      this.#addToStore(\n        id,\n        origin,\n        type,\n        requestData,\n        requestState,\n        expectsResult,\n      );\n    });\n  }\n\n  /**\n   * Validates parameters to the add method.\n   *\n   * @param id - The id of the approval request.\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   */\n  #validateAddParams(\n    id: string,\n    origin: string,\n    type: string,\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n  ): void {\n    let errorMessage = null;\n    if (!id || typeof id !== 'string') {\n      errorMessage = 'Must specify non-empty string id.';\n    } else if (this.#approvals.has(id)) {\n      errorMessage = `Approval request with id '${id}' already exists.`;\n    } else if (!origin || typeof origin !== 'string') {\n      errorMessage = 'Must specify non-empty string origin.';\n    } else if (!type || typeof type !== 'string') {\n      errorMessage = 'Must specify non-empty string type.';\n    } else if (\n      requestData &&\n      (typeof requestData !== 'object' || Array.isArray(requestData))\n    ) {\n      errorMessage = 'Request data must be a plain object if specified.';\n    } else if (\n      requestState &&\n      (typeof requestState !== 'object' || Array.isArray(requestState))\n    ) {\n      errorMessage = 'Request state must be a plain object if specified.';\n    }\n\n    if (errorMessage) {\n      throw rpcErrors.internal(errorMessage);\n    }\n  }\n\n  /**\n   * Adds an entry to _origins.\n   * Performs no validation.\n   *\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   */\n  #addPendingApprovalOrigin(origin: string, type: string): void {\n    let originMap = this.#origins.get(origin);\n\n    if (!originMap) {\n      originMap = new Map();\n      this.#origins.set(origin, originMap);\n    }\n\n    const currentValue = originMap.get(type) || 0;\n    originMap.set(type, currentValue + 1);\n  }\n\n  /**\n   * Adds an entry to the store.\n   * Performs no validation.\n   *\n   * @param id - The id of the approval request.\n   * @param origin - The origin of the approval request.\n   * @param type - The type associated with the approval request.\n   * @param requestData - The request data associated with the approval request.\n   * @param requestState - The request state associated with the approval request.\n   * @param expectsResult - Whether the request expects a result object to be returned.\n   */\n  #addToStore(\n    id: string,\n    origin: string,\n    type: string,\n    requestData?: Record<string, Json>,\n    requestState?: Record<string, Json>,\n    expectsResult?: boolean,\n  ): void {\n    const approval = {\n      id,\n      origin,\n      type,\n      time: Date.now(),\n      requestData: requestData || null,\n      requestState: requestState || null,\n      expectsResult: expectsResult || false,\n    };\n\n    this.update((draftState) => {\n      draftState.pendingApprovals[id] = approval as never;\n\n      draftState.pendingApprovalCount = Object.keys(\n        draftState.pendingApprovals,\n      ).length;\n    });\n  }\n\n  /**\n   * Deletes the approval with the given id.\n   *\n   * Deletion is an internal operation because approval state is solely\n   * managed by this controller.\n   *\n   * @param id - The id of the approval request to be deleted.\n   */\n  #delete(id: string): void {\n    if (!this.#approvals.has(id)) {\n      throw new ApprovalRequestNotFoundError(id);\n    }\n\n    this.#approvals.delete(id);\n\n    const { origin, type } = this.state.pendingApprovals[id];\n\n    const originMap = this.#origins.get(origin) as Map<string, number>;\n    const originTotalCount = this.getApprovalCount({ origin });\n    const originTypeCount = originMap.get(type) as number;\n\n    if (originTotalCount === 1) {\n      this.#origins.delete(origin);\n    } else {\n      originMap.set(type, originTypeCount - 1);\n    }\n\n    this.update((draftState) => {\n      delete draftState.pendingApprovals[id];\n      draftState.pendingApprovalCount = Object.keys(\n        draftState.pendingApprovals,\n      ).length;\n    });\n  }\n\n  #getCallbacks(id: string): ApprovalCallbacks {\n    const callbacks = this.#approvals.get(id);\n\n    if (!callbacks) {\n      throw new ApprovalRequestNotFoundError(id);\n    }\n\n    return callbacks;\n  }\n\n  async #result(\n    type: string,\n    opts: ResultOptions,\n    requestData: Record<string, Json>,\n  ) {\n    try {\n      await this.addAndShowApprovalRequest({\n        origin: ORIGIN_METAMASK,\n        type,\n        requestData,\n      });\n    } catch (error) {\n      console.info('Failed to display result page', error);\n    } finally {\n      if (opts.flowToEnd) {\n        try {\n          this.endFlow({ id: opts.flowToEnd });\n        } catch (error) {\n          console.info('Failed to end flow', { id: opts.flowToEnd, error });\n        }\n      }\n    }\n  }\n}\n\nexport default ApprovalController;\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/chunk-C4VZRQ2J.mjs b/node_modules/@metamask/approval-controller/dist/chunk-C4VZRQ2J.mjs
new file mode 100644
index 0000000..184ae25
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/chunk-C4VZRQ2J.mjs
@@ -0,0 +1,66 @@
+var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
+
+// src/errors.ts
+var ApprovalRequestNotFoundError = class extends Error {
+  constructor(id) {
+    super(`Approval request with id '${id}' not found.`);
+  }
+};
+var ApprovalRequestNoResultSupportError = class extends Error {
+  constructor(id) {
+    super(
+      `Approval acceptance requested result but request with id '${id}' does not support it.`
+    );
+  }
+};
+var NoApprovalFlowsError = class extends Error {
+  constructor() {
+    super(`No approval flows found.`);
+  }
+};
+var EndInvalidFlowError = class extends Error {
+  constructor(id, flowIds) {
+    super(
+      `Attempted to end flow with id '${id}' which does not match current flow with id '${flowIds.slice(-1)[0]}'. All Flows: ${flowIds.join(", ")}`
+    );
+  }
+};
+var MissingApprovalFlowError = class extends Error {
+  constructor(id) {
+    super(`No approval flows found with id '${id}'.`);
+  }
+};
+
+export {
+  __privateGet,
+  __privateAdd,
+  __privateSet,
+  __privateMethod,
+  ApprovalRequestNotFoundError,
+  ApprovalRequestNoResultSupportError,
+  NoApprovalFlowsError,
+  EndInvalidFlowError,
+  MissingApprovalFlowError
+};
+//# sourceMappingURL=chunk-C4VZRQ2J.mjs.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/chunk-LKCXZAKD.js b/node_modules/@metamask/approval-controller/dist/chunk-LKCXZAKD.js
new file mode 100644
index 0000000..3e91d66
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/chunk-LKCXZAKD.js
@@ -0,0 +1,66 @@
+"use strict";Object.defineProperty(exports, "__esModule", {value: true});var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
+
+// src/errors.ts
+var ApprovalRequestNotFoundError = class extends Error {
+  constructor(id) {
+    super(`Approval request with id '${id}' not found.`);
+  }
+};
+var ApprovalRequestNoResultSupportError = class extends Error {
+  constructor(id) {
+    super(
+      `Approval acceptance requested result but request with id '${id}' does not support it.`
+    );
+  }
+};
+var NoApprovalFlowsError = class extends Error {
+  constructor() {
+    super(`No approval flows found.`);
+  }
+};
+var EndInvalidFlowError = class extends Error {
+  constructor(id, flowIds) {
+    super(
+      `Attempted to end flow with id '${id}' which does not match current flow with id '${flowIds.slice(-1)[0]}'. All Flows: ${flowIds.join(", ")}`
+    );
+  }
+};
+var MissingApprovalFlowError = class extends Error {
+  constructor(id) {
+    super(`No approval flows found with id '${id}'.`);
+  }
+};
+
+
+
+
+
+
+
+
+
+
+
+exports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod; exports.ApprovalRequestNotFoundError = ApprovalRequestNotFoundError; exports.ApprovalRequestNoResultSupportError = ApprovalRequestNoResultSupportError; exports.NoApprovalFlowsError = NoApprovalFlowsError; exports.EndInvalidFlowError = EndInvalidFlowError; exports.MissingApprovalFlowError = MissingApprovalFlowError;
+//# sourceMappingURL=chunk-LKCXZAKD.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/chunk-PIJZDVKC.mjs b/node_modules/@metamask/approval-controller/dist/chunk-PIJZDVKC.mjs
new file mode 100644
index 0000000..57f7b7b
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/chunk-PIJZDVKC.mjs
@@ -0,0 +1,591 @@
+import {
+  ApprovalRequestNoResultSupportError,
+  ApprovalRequestNotFoundError,
+  EndInvalidFlowError,
+  MissingApprovalFlowError,
+  NoApprovalFlowsError,
+  __privateAdd,
+  __privateGet,
+  __privateMethod,
+  __privateSet
+} from "./chunk-C4VZRQ2J.mjs";
+
+// src/ApprovalController.ts
+import {
+  BaseController
+} from "@metamask/base-controller";
+import { rpcErrors } from "@metamask/rpc-errors";
+import { nanoid } from "nanoid";
+var ORIGIN_METAMASK = "metamask";
+var APPROVAL_TYPE_RESULT_ERROR = "result_error";
+var APPROVAL_TYPE_RESULT_SUCCESS = "result_success";
+var controllerName = "ApprovalController";
+var stateMetadata = {
+  pendingApprovals: { persist: false, anonymous: true },
+  pendingApprovalCount: { persist: false, anonymous: false },
+  approvalFlows: { persist: false, anonymous: false }
+};
+var getAlreadyPendingMessage = (origin, type) => `Request of type '${type}' already pending for origin ${origin}. Please wait.`;
+var getDefaultState = () => {
+  return {
+    pendingApprovals: {},
+    pendingApprovalCount: 0,
+    approvalFlows: []
+  };
+};
+var _approvals, _origins, _showApprovalRequest, _typesExcludedFromRateLimiting, _add, add_fn, _validateAddParams, validateAddParams_fn, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn, _addToStore, addToStore_fn, _delete, delete_fn, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn, _result, result_fn;
+var ApprovalController = class extends BaseController {
+  /**
+   * Construct an Approval controller.
+   *
+   * @param options - The controller options.
+   * @param options.showApprovalRequest - Function for opening the UI such that
+   * the request can be displayed to the user.
+   * @param options.messenger - The restricted controller messenger for the Approval controller.
+   * @param options.state - The initial controller state.
+   * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.
+   */
+  constructor({
+    messenger,
+    showApprovalRequest,
+    state = {},
+    typesExcludedFromRateLimiting = []
+  }) {
+    super({
+      name: controllerName,
+      metadata: stateMetadata,
+      messenger,
+      state: { ...getDefaultState(), ...state }
+    });
+    /**
+     * Implementation of add operation.
+     *
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param id - The id of the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     * @param expectsResult - Whether the approval request expects a result object to be returned.
+     * @returns The approval promise.
+     */
+    __privateAdd(this, _add);
+    /**
+     * Validates parameters to the add method.
+     *
+     * @param id - The id of the approval request.
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     */
+    __privateAdd(this, _validateAddParams);
+    /**
+     * Adds an entry to _origins.
+     * Performs no validation.
+     *
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     */
+    __privateAdd(this, _addPendingApprovalOrigin);
+    /**
+     * Adds an entry to the store.
+     * Performs no validation.
+     *
+     * @param id - The id of the approval request.
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     * @param expectsResult - Whether the request expects a result object to be returned.
+     */
+    __privateAdd(this, _addToStore);
+    /**
+     * Deletes the approval with the given id. The approval promise must be
+     * resolved or reject before this method is called.
+     * Deletion is an internal operation because approval state is solely
+     * managed by this controller.
+     *
+     * @param id - The id of the approval request to be deleted.
+     */
+    __privateAdd(this, _delete);
+    /**
+     * Gets the approval callbacks for the given id, deletes the entry, and then
+     * returns the callbacks for promise resolution.
+     * Throws an error if no approval is found for the given id.
+     *
+     * @param id - The id of the approval request.
+     * @returns The promise callbacks associated with the approval request.
+     */
+    __privateAdd(this, _deleteApprovalAndGetCallbacks);
+    __privateAdd(this, _result);
+    __privateAdd(this, _approvals, void 0);
+    __privateAdd(this, _origins, void 0);
+    __privateAdd(this, _showApprovalRequest, void 0);
+    __privateAdd(this, _typesExcludedFromRateLimiting, void 0);
+    __privateSet(this, _approvals, /* @__PURE__ */ new Map());
+    __privateSet(this, _origins, /* @__PURE__ */ new Map());
+    __privateSet(this, _showApprovalRequest, showApprovalRequest);
+    __privateSet(this, _typesExcludedFromRateLimiting, typesExcludedFromRateLimiting);
+    this.registerMessageHandlers();
+  }
+  /**
+   * Constructor helper for registering this controller's messaging system
+   * actions.
+   */
+  registerMessageHandlers() {
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:clearRequests`,
+      this.clear.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:addRequest`,
+      (opts, shouldShowRequest) => {
+        if (shouldShowRequest) {
+          return this.addAndShowApprovalRequest(opts);
+        }
+        return this.add(opts);
+      }
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:hasRequest`,
+      this.has.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:acceptRequest`,
+      this.accept.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:rejectRequest`,
+      this.reject.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:updateRequestState`,
+      this.updateRequestState.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:startFlow`,
+      this.startFlow.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:endFlow`,
+      this.endFlow.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:setFlowLoadingText`,
+      this.setFlowLoadingText.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:showSuccess`,
+      this.success.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:showError`,
+      this.error.bind(this)
+    );
+  }
+  addAndShowApprovalRequest(opts) {
+    const promise = __privateMethod(this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);
+    __privateGet(this, _showApprovalRequest).call(this);
+    return promise;
+  }
+  add(opts) {
+    return __privateMethod(this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);
+  }
+  /**
+   * Gets the info for the approval request with the given id.
+   *
+   * @param id - The id of the approval request.
+   * @returns The approval request data associated with the id.
+   */
+  get(id) {
+    return this.state.pendingApprovals[id];
+  }
+  /**
+   * Gets the number of pending approvals, by origin and/or type.
+   *
+   * If only `origin` is specified, all approvals for that origin will be
+   * counted, regardless of type.
+   * If only `type` is specified, all approvals for that type will be counted,
+   * regardless of origin.
+   * If both `origin` and `type` are specified, 0 or 1 will be returned.
+   *
+   * @param opts - The approval count options.
+   * @param opts.origin - An approval origin.
+   * @param opts.type - The type of the approval request.
+   * @returns The current approval request count for the given origin and/or
+   * type.
+   */
+  getApprovalCount(opts = {}) {
+    if (!opts.origin && !opts.type) {
+      throw new Error("Must specify origin, type, or both.");
+    }
+    const { origin, type: _type } = opts;
+    if (origin && _type) {
+      return __privateGet(this, _origins).get(origin)?.get(_type) || 0;
+    }
+    if (origin) {
+      return Array.from(
+        (__privateGet(this, _origins).get(origin) || /* @__PURE__ */ new Map()).values()
+        // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands
+      ).reduce((total, value) => total + value, 0);
+    }
+    let count = 0;
+    for (const approval of Object.values(this.state.pendingApprovals)) {
+      if (approval.type === _type) {
+        count += 1;
+      }
+    }
+    return count;
+  }
+  /**
+   * Get the total count of all pending approval requests for all origins.
+   *
+   * @returns The total pending approval request count.
+   */
+  getTotalApprovalCount() {
+    return this.state.pendingApprovalCount;
+  }
+  /**
+   * Checks if there's a pending approval request per the given parameters.
+   * At least one parameter must be specified. An error will be thrown if the
+   * parameters are invalid.
+   *
+   * If `id` is specified, all other parameters will be ignored.
+   * If `id` is not specified, the method will check for requests that match
+   * all of the specified parameters.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The ID to check for.
+   * @param opts.origin - The origin to check for.
+   * @param opts.type - The type to check for.
+   * @returns `true` if a matching approval is found, and `false` otherwise.
+   */
+  has(opts = {}) {
+    const { id, origin, type: _type } = opts;
+    if (id) {
+      if (typeof id !== "string") {
+        throw new Error("May not specify non-string id.");
+      }
+      return __privateGet(this, _approvals).has(id);
+    }
+    if (_type && typeof _type !== "string") {
+      throw new Error("May not specify non-string type.");
+    }
+    if (origin) {
+      if (typeof origin !== "string") {
+        throw new Error("May not specify non-string origin.");
+      }
+      if (_type) {
+        return Boolean(__privateGet(this, _origins).get(origin)?.get(_type));
+      }
+      return __privateGet(this, _origins).has(origin);
+    }
+    if (_type) {
+      for (const approval of Object.values(this.state.pendingApprovals)) {
+        if (approval.type === _type) {
+          return true;
+        }
+      }
+      return false;
+    }
+    throw new Error(
+      "Must specify a valid combination of id, origin, and type."
+    );
+  }
+  /**
+   * Resolves the promise of the approval with the given id, and deletes the
+   * approval. Throws an error if no such approval exists.
+   *
+   * @param id - The id of the approval request.
+   * @param value - The value to resolve the approval promise with.
+   * @param options - Options bag.
+   * @returns A promise that either resolves once a result is provided by
+   * the creator of the approval request, or immediately if `options.waitForResult`
+   * is `false` or `undefined`.
+   */
+  accept(id, value, options) {
+    const approval = this.get(id);
+    const requestPromise = __privateMethod(this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id);
+    return new Promise((resolve, reject) => {
+      const resultCallbacks = {
+        success: (acceptValue) => resolve({ value: acceptValue }),
+        error: reject
+      };
+      if (options?.waitForResult && !approval.expectsResult) {
+        reject(new ApprovalRequestNoResultSupportError(id));
+        return;
+      }
+      const resultValue = options?.waitForResult ? resultCallbacks : void 0;
+      const resolveValue = approval.expectsResult ? { value, resultCallbacks: resultValue } : value;
+      requestPromise.resolve(resolveValue);
+      if (!options?.waitForResult) {
+        resolve({ value: void 0 });
+      }
+    });
+  }
+  /**
+   * Rejects the promise of the approval with the given id, and deletes the
+   * approval. Throws an error if no such approval exists.
+   *
+   * @param id - The id of the approval request.
+   * @param error - The error to reject the approval promise with.
+   */
+  reject(id, error) {
+    __privateMethod(this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id).reject(error);
+  }
+  /**
+   * Rejects and deletes all approval requests.
+   *
+   * @param rejectionError - The JsonRpcError to reject the approval
+   * requests with.
+   */
+  clear(rejectionError) {
+    for (const id of __privateGet(this, _approvals).keys()) {
+      this.reject(id, rejectionError);
+    }
+    __privateGet(this, _origins).clear();
+    this.update((draftState) => {
+      draftState.pendingApprovals = {};
+      draftState.pendingApprovalCount = 0;
+    });
+  }
+  /**
+   * Updates the request state of the approval with the given id.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval request.
+   * @param opts.requestState - Additional data associated with the request
+   */
+  updateRequestState(opts) {
+    if (!this.state.pendingApprovals[opts.id]) {
+      throw new ApprovalRequestNotFoundError(opts.id);
+    }
+    this.update((draftState) => {
+      draftState.pendingApprovals[opts.id].requestState = opts.requestState;
+    });
+  }
+  /**
+   * Starts a new approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval flow.
+   * @param opts.loadingText - The loading text that will be associated to the approval flow.
+   * @param opts.show - A flag to determine whether the approval should show to the user.
+   * @returns The object containing the approval flow id.
+   */
+  startFlow(opts = {}) {
+    const id = opts.id ?? nanoid();
+    const loadingText = opts.loadingText ?? null;
+    this.update((draftState) => {
+      draftState.approvalFlows.push({ id, loadingText });
+    });
+    if (opts.show !== false) {
+      __privateGet(this, _showApprovalRequest).call(this);
+    }
+    return { id, loadingText };
+  }
+  /**
+   * Ends the current approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval flow that will be finished.
+   */
+  endFlow({ id }) {
+    if (!this.state.approvalFlows.length) {
+      throw new NoApprovalFlowsError();
+    }
+    const currentFlow = this.state.approvalFlows.slice(-1)[0];
+    if (id !== currentFlow.id) {
+      throw new EndInvalidFlowError(
+        id,
+        this.state.approvalFlows.map((flow) => flow.id)
+      );
+    }
+    this.update((draftState) => {
+      draftState.approvalFlows.pop();
+    });
+  }
+  /**
+   * Sets the loading text for the approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The approval flow loading text that will be displayed.
+   * @param opts.loadingText - The loading text that will be associated to the approval flow.
+   */
+  setFlowLoadingText({ id, loadingText }) {
+    const flowIndex = this.state.approvalFlows.findIndex(
+      (flow) => flow.id === id
+    );
+    if (flowIndex === -1) {
+      throw new MissingApprovalFlowError(id);
+    }
+    this.update((draftState) => {
+      draftState.approvalFlows[flowIndex].loadingText = loadingText;
+    });
+  }
+  /**
+   * Show a success page.
+   *
+   * @param opts - Options bag.
+   * @param opts.message - The message text or components to display in the page.
+   * @param opts.header - The text or components to display in the header of the page.
+   * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.
+   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+   * @returns Empty object to support future additions.
+   */
+  async success(opts = {}) {
+    await __privateMethod(this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_SUCCESS, opts, {
+      message: opts.message,
+      header: opts.header,
+      title: opts.title,
+      icon: opts.icon
+    });
+    return {};
+  }
+  /**
+   * Show an error page.
+   *
+   * @param opts - Options bag.
+   * @param opts.message - The message text or components to display in the page.
+   * @param opts.header - The text or components to display in the header of the page.
+   * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.
+   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+   * @returns Empty object to support future additions.
+   */
+  async error(opts = {}) {
+    await __privateMethod(this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_ERROR, opts, {
+      error: opts.error,
+      header: opts.header,
+      title: opts.title,
+      icon: opts.icon
+    });
+    return {};
+  }
+};
+_approvals = new WeakMap();
+_origins = new WeakMap();
+_showApprovalRequest = new WeakMap();
+_typesExcludedFromRateLimiting = new WeakMap();
+_add = new WeakSet();
+add_fn = function(origin, type, id = nanoid(), requestData, requestState, expectsResult) {
+  __privateMethod(this, _validateAddParams, validateAddParams_fn).call(this, id, origin, type, requestData, requestState);
+  if (!__privateGet(this, _typesExcludedFromRateLimiting).includes(type) && this.has({ origin, type })) {
+    throw rpcErrors.resourceUnavailable(
+      getAlreadyPendingMessage(origin, type)
+    );
+  }
+  return new Promise((resolve, reject) => {
+    __privateGet(this, _approvals).set(id, { resolve, reject });
+    __privateMethod(this, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn).call(this, origin, type);
+    __privateMethod(this, _addToStore, addToStore_fn).call(this, id, origin, type, requestData, requestState, expectsResult);
+  });
+};
+_validateAddParams = new WeakSet();
+validateAddParams_fn = function(id, origin, type, requestData, requestState) {
+  let errorMessage = null;
+  if (!id || typeof id !== "string") {
+    errorMessage = "Must specify non-empty string id.";
+  } else if (__privateGet(this, _approvals).has(id)) {
+    errorMessage = `Approval request with id '${id}' already exists.`;
+  } else if (!origin || typeof origin !== "string") {
+    errorMessage = "Must specify non-empty string origin.";
+  } else if (!type || typeof type !== "string") {
+    errorMessage = "Must specify non-empty string type.";
+  } else if (requestData && (typeof requestData !== "object" || Array.isArray(requestData))) {
+    errorMessage = "Request data must be a plain object if specified.";
+  } else if (requestState && (typeof requestState !== "object" || Array.isArray(requestState))) {
+    errorMessage = "Request state must be a plain object if specified.";
+  }
+  if (errorMessage) {
+    throw rpcErrors.internal(errorMessage);
+  }
+};
+_addPendingApprovalOrigin = new WeakSet();
+addPendingApprovalOrigin_fn = function(origin, type) {
+  let originMap = __privateGet(this, _origins).get(origin);
+  if (!originMap) {
+    originMap = /* @__PURE__ */ new Map();
+    __privateGet(this, _origins).set(origin, originMap);
+  }
+  const currentValue = originMap.get(type) || 0;
+  originMap.set(type, currentValue + 1);
+};
+_addToStore = new WeakSet();
+addToStore_fn = function(id, origin, type, requestData, requestState, expectsResult) {
+  const approval = {
+    id,
+    origin,
+    type,
+    time: Date.now(),
+    requestData: requestData || null,
+    requestState: requestState || null,
+    expectsResult: expectsResult || false
+  };
+  this.update((draftState) => {
+    draftState.pendingApprovals[id] = approval;
+    draftState.pendingApprovalCount = Object.keys(
+      draftState.pendingApprovals
+    ).length;
+  });
+};
+_delete = new WeakSet();
+delete_fn = function(id) {
+  __privateGet(this, _approvals).delete(id);
+  const { origin, type } = this.state.pendingApprovals[id];
+  const originMap = __privateGet(this, _origins).get(origin);
+  const originTotalCount = this.getApprovalCount({ origin });
+  const originTypeCount = originMap.get(type);
+  if (originTotalCount === 1) {
+    __privateGet(this, _origins).delete(origin);
+  } else {
+    originMap.set(type, originTypeCount - 1);
+  }
+  this.update((draftState) => {
+    delete draftState.pendingApprovals[id];
+    draftState.pendingApprovalCount = Object.keys(
+      draftState.pendingApprovals
+    ).length;
+  });
+};
+_deleteApprovalAndGetCallbacks = new WeakSet();
+deleteApprovalAndGetCallbacks_fn = function(id) {
+  const callbacks = __privateGet(this, _approvals).get(id);
+  if (!callbacks) {
+    throw new ApprovalRequestNotFoundError(id);
+  }
+  __privateMethod(this, _delete, delete_fn).call(this, id);
+  return callbacks;
+};
+_result = new WeakSet();
+result_fn = async function(type, opts, requestData) {
+  try {
+    await this.addAndShowApprovalRequest({
+      origin: ORIGIN_METAMASK,
+      type,
+      requestData
+    });
+  } catch (error) {
+    console.info("Failed to display result page", error);
+  } finally {
+    if (opts.flowToEnd) {
+      try {
+        this.endFlow({ id: opts.flowToEnd });
+      } catch (error) {
+        console.info("Failed to end flow", { id: opts.flowToEnd, error });
+      }
+    }
+  }
+};
+var ApprovalController_default = ApprovalController;
+
+export {
+  ORIGIN_METAMASK,
+  APPROVAL_TYPE_RESULT_ERROR,
+  APPROVAL_TYPE_RESULT_SUCCESS,
+  ApprovalController,
+  ApprovalController_default
+};
+//# sourceMappingURL=chunk-PIJZDVKC.mjs.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/chunk-PMXPCCKS.js b/node_modules/@metamask/approval-controller/dist/chunk-PMXPCCKS.js
new file mode 100644
index 0000000..d840c27
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/chunk-PMXPCCKS.js
@@ -0,0 +1,591 @@
+"use strict";Object.defineProperty(exports, "__esModule", {value: true});
+
+
+
+
+
+
+
+
+
+var _chunkLKCXZAKDjs = require('./chunk-LKCXZAKD.js');
+
+// src/ApprovalController.ts
+
+
+var _basecontroller = require('@metamask/base-controller');
+var _rpcerrors = require('@metamask/rpc-errors');
+var _nanoid = require('nanoid');
+var ORIGIN_METAMASK = "metamask";
+var APPROVAL_TYPE_RESULT_ERROR = "result_error";
+var APPROVAL_TYPE_RESULT_SUCCESS = "result_success";
+var controllerName = "ApprovalController";
+var stateMetadata = {
+  pendingApprovals: { persist: false, anonymous: true },
+  pendingApprovalCount: { persist: false, anonymous: false },
+  approvalFlows: { persist: false, anonymous: false }
+};
+var getAlreadyPendingMessage = (origin, type) => `Request of type '${type}' already pending for origin ${origin}. Please wait.`;
+var getDefaultState = () => {
+  return {
+    pendingApprovals: {},
+    pendingApprovalCount: 0,
+    approvalFlows: []
+  };
+};
+var _approvals, _origins, _showApprovalRequest, _typesExcludedFromRateLimiting, _add, add_fn, _validateAddParams, validateAddParams_fn, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn, _addToStore, addToStore_fn, _delete, delete_fn, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn, _result, result_fn;
+var ApprovalController = class extends _basecontroller.BaseController {
+  /**
+   * Construct an Approval controller.
+   *
+   * @param options - The controller options.
+   * @param options.showApprovalRequest - Function for opening the UI such that
+   * the request can be displayed to the user.
+   * @param options.messenger - The restricted controller messenger for the Approval controller.
+   * @param options.state - The initial controller state.
+   * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.
+   */
+  constructor({
+    messenger,
+    showApprovalRequest,
+    state = {},
+    typesExcludedFromRateLimiting = []
+  }) {
+    super({
+      name: controllerName,
+      metadata: stateMetadata,
+      messenger,
+      state: { ...getDefaultState(), ...state }
+    });
+    /**
+     * Implementation of add operation.
+     *
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param id - The id of the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     * @param expectsResult - Whether the approval request expects a result object to be returned.
+     * @returns The approval promise.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _add);
+    /**
+     * Validates parameters to the add method.
+     *
+     * @param id - The id of the approval request.
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _validateAddParams);
+    /**
+     * Adds an entry to _origins.
+     * Performs no validation.
+     *
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _addPendingApprovalOrigin);
+    /**
+     * Adds an entry to the store.
+     * Performs no validation.
+     *
+     * @param id - The id of the approval request.
+     * @param origin - The origin of the approval request.
+     * @param type - The type associated with the approval request.
+     * @param requestData - The request data associated with the approval request.
+     * @param requestState - The request state associated with the approval request.
+     * @param expectsResult - Whether the request expects a result object to be returned.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _addToStore);
+    /**
+     * Deletes the approval with the given id. The approval promise must be
+     * resolved or reject before this method is called.
+     * Deletion is an internal operation because approval state is solely
+     * managed by this controller.
+     *
+     * @param id - The id of the approval request to be deleted.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _delete);
+    /**
+     * Gets the approval callbacks for the given id, deletes the entry, and then
+     * returns the callbacks for promise resolution.
+     * Throws an error if no approval is found for the given id.
+     *
+     * @param id - The id of the approval request.
+     * @returns The promise callbacks associated with the approval request.
+     */
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _deleteApprovalAndGetCallbacks);
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _result);
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _approvals, void 0);
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _origins, void 0);
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _showApprovalRequest, void 0);
+    _chunkLKCXZAKDjs.__privateAdd.call(void 0, this, _typesExcludedFromRateLimiting, void 0);
+    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _approvals, /* @__PURE__ */ new Map());
+    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _origins, /* @__PURE__ */ new Map());
+    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _showApprovalRequest, showApprovalRequest);
+    _chunkLKCXZAKDjs.__privateSet.call(void 0, this, _typesExcludedFromRateLimiting, typesExcludedFromRateLimiting);
+    this.registerMessageHandlers();
+  }
+  /**
+   * Constructor helper for registering this controller's messaging system
+   * actions.
+   */
+  registerMessageHandlers() {
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:clearRequests`,
+      this.clear.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:addRequest`,
+      (opts, shouldShowRequest) => {
+        if (shouldShowRequest) {
+          return this.addAndShowApprovalRequest(opts);
+        }
+        return this.add(opts);
+      }
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:hasRequest`,
+      this.has.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:acceptRequest`,
+      this.accept.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:rejectRequest`,
+      this.reject.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:updateRequestState`,
+      this.updateRequestState.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:startFlow`,
+      this.startFlow.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:endFlow`,
+      this.endFlow.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:setFlowLoadingText`,
+      this.setFlowLoadingText.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:showSuccess`,
+      this.success.bind(this)
+    );
+    this.messagingSystem.registerActionHandler(
+      `${controllerName}:showError`,
+      this.error.bind(this)
+    );
+  }
+  addAndShowApprovalRequest(opts) {
+    const promise = _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);
+    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _showApprovalRequest).call(this);
+    return promise;
+  }
+  add(opts) {
+    return _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _add, add_fn).call(this, opts.origin, opts.type, opts.id, opts.requestData, opts.requestState, opts.expectsResult);
+  }
+  /**
+   * Gets the info for the approval request with the given id.
+   *
+   * @param id - The id of the approval request.
+   * @returns The approval request data associated with the id.
+   */
+  get(id) {
+    return this.state.pendingApprovals[id];
+  }
+  /**
+   * Gets the number of pending approvals, by origin and/or type.
+   *
+   * If only `origin` is specified, all approvals for that origin will be
+   * counted, regardless of type.
+   * If only `type` is specified, all approvals for that type will be counted,
+   * regardless of origin.
+   * If both `origin` and `type` are specified, 0 or 1 will be returned.
+   *
+   * @param opts - The approval count options.
+   * @param opts.origin - An approval origin.
+   * @param opts.type - The type of the approval request.
+   * @returns The current approval request count for the given origin and/or
+   * type.
+   */
+  getApprovalCount(opts = {}) {
+    if (!opts.origin && !opts.type) {
+      throw new Error("Must specify origin, type, or both.");
+    }
+    const { origin, type: _type } = opts;
+    if (origin && _type) {
+      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin)?.get(_type) || 0;
+    }
+    if (origin) {
+      return Array.from(
+        (_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin) || /* @__PURE__ */ new Map()).values()
+        // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands
+      ).reduce((total, value) => total + value, 0);
+    }
+    let count = 0;
+    for (const approval of Object.values(this.state.pendingApprovals)) {
+      if (approval.type === _type) {
+        count += 1;
+      }
+    }
+    return count;
+  }
+  /**
+   * Get the total count of all pending approval requests for all origins.
+   *
+   * @returns The total pending approval request count.
+   */
+  getTotalApprovalCount() {
+    return this.state.pendingApprovalCount;
+  }
+  /**
+   * Checks if there's a pending approval request per the given parameters.
+   * At least one parameter must be specified. An error will be thrown if the
+   * parameters are invalid.
+   *
+   * If `id` is specified, all other parameters will be ignored.
+   * If `id` is not specified, the method will check for requests that match
+   * all of the specified parameters.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The ID to check for.
+   * @param opts.origin - The origin to check for.
+   * @param opts.type - The type to check for.
+   * @returns `true` if a matching approval is found, and `false` otherwise.
+   */
+  has(opts = {}) {
+    const { id, origin, type: _type } = opts;
+    if (id) {
+      if (typeof id !== "string") {
+        throw new Error("May not specify non-string id.");
+      }
+      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).has(id);
+    }
+    if (_type && typeof _type !== "string") {
+      throw new Error("May not specify non-string type.");
+    }
+    if (origin) {
+      if (typeof origin !== "string") {
+        throw new Error("May not specify non-string origin.");
+      }
+      if (_type) {
+        return Boolean(_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin)?.get(_type));
+      }
+      return _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).has(origin);
+    }
+    if (_type) {
+      for (const approval of Object.values(this.state.pendingApprovals)) {
+        if (approval.type === _type) {
+          return true;
+        }
+      }
+      return false;
+    }
+    throw new Error(
+      "Must specify a valid combination of id, origin, and type."
+    );
+  }
+  /**
+   * Resolves the promise of the approval with the given id, and deletes the
+   * approval. Throws an error if no such approval exists.
+   *
+   * @param id - The id of the approval request.
+   * @param value - The value to resolve the approval promise with.
+   * @param options - Options bag.
+   * @returns A promise that either resolves once a result is provided by
+   * the creator of the approval request, or immediately if `options.waitForResult`
+   * is `false` or `undefined`.
+   */
+  accept(id, value, options) {
+    const approval = this.get(id);
+    const requestPromise = _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id);
+    return new Promise((resolve, reject) => {
+      const resultCallbacks = {
+        success: (acceptValue) => resolve({ value: acceptValue }),
+        error: reject
+      };
+      if (options?.waitForResult && !approval.expectsResult) {
+        reject(new (0, _chunkLKCXZAKDjs.ApprovalRequestNoResultSupportError)(id));
+        return;
+      }
+      const resultValue = options?.waitForResult ? resultCallbacks : void 0;
+      const resolveValue = approval.expectsResult ? { value, resultCallbacks: resultValue } : value;
+      requestPromise.resolve(resolveValue);
+      if (!options?.waitForResult) {
+        resolve({ value: void 0 });
+      }
+    });
+  }
+  /**
+   * Rejects the promise of the approval with the given id, and deletes the
+   * approval. Throws an error if no such approval exists.
+   *
+   * @param id - The id of the approval request.
+   * @param error - The error to reject the approval promise with.
+   */
+  reject(id, error) {
+    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _deleteApprovalAndGetCallbacks, deleteApprovalAndGetCallbacks_fn).call(this, id).reject(error);
+  }
+  /**
+   * Rejects and deletes all approval requests.
+   *
+   * @param rejectionError - The JsonRpcError to reject the approval
+   * requests with.
+   */
+  clear(rejectionError) {
+    for (const id of _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).keys()) {
+      this.reject(id, rejectionError);
+    }
+    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).clear();
+    this.update((draftState) => {
+      draftState.pendingApprovals = {};
+      draftState.pendingApprovalCount = 0;
+    });
+  }
+  /**
+   * Updates the request state of the approval with the given id.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval request.
+   * @param opts.requestState - Additional data associated with the request
+   */
+  updateRequestState(opts) {
+    if (!this.state.pendingApprovals[opts.id]) {
+      throw new (0, _chunkLKCXZAKDjs.ApprovalRequestNotFoundError)(opts.id);
+    }
+    this.update((draftState) => {
+      draftState.pendingApprovals[opts.id].requestState = opts.requestState;
+    });
+  }
+  /**
+   * Starts a new approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval flow.
+   * @param opts.loadingText - The loading text that will be associated to the approval flow.
+   * @param opts.show - A flag to determine whether the approval should show to the user.
+   * @returns The object containing the approval flow id.
+   */
+  startFlow(opts = {}) {
+    const id = opts.id ?? _nanoid.nanoid.call(void 0, );
+    const loadingText = opts.loadingText ?? null;
+    this.update((draftState) => {
+      draftState.approvalFlows.push({ id, loadingText });
+    });
+    if (opts.show !== false) {
+      _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _showApprovalRequest).call(this);
+    }
+    return { id, loadingText };
+  }
+  /**
+   * Ends the current approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The id of the approval flow that will be finished.
+   */
+  endFlow({ id }) {
+    if (!this.state.approvalFlows.length) {
+      throw new (0, _chunkLKCXZAKDjs.NoApprovalFlowsError)();
+    }
+    const currentFlow = this.state.approvalFlows.slice(-1)[0];
+    if (id !== currentFlow.id) {
+      throw new (0, _chunkLKCXZAKDjs.EndInvalidFlowError)(
+        id,
+        this.state.approvalFlows.map((flow) => flow.id)
+      );
+    }
+    this.update((draftState) => {
+      draftState.approvalFlows.pop();
+    });
+  }
+  /**
+   * Sets the loading text for the approval flow.
+   *
+   * @param opts - Options bag.
+   * @param opts.id - The approval flow loading text that will be displayed.
+   * @param opts.loadingText - The loading text that will be associated to the approval flow.
+   */
+  setFlowLoadingText({ id, loadingText }) {
+    const flowIndex = this.state.approvalFlows.findIndex(
+      (flow) => flow.id === id
+    );
+    if (flowIndex === -1) {
+      throw new (0, _chunkLKCXZAKDjs.MissingApprovalFlowError)(id);
+    }
+    this.update((draftState) => {
+      draftState.approvalFlows[flowIndex].loadingText = loadingText;
+    });
+  }
+  /**
+   * Show a success page.
+   *
+   * @param opts - Options bag.
+   * @param opts.message - The message text or components to display in the page.
+   * @param opts.header - The text or components to display in the header of the page.
+   * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.
+   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+   * @returns Empty object to support future additions.
+   */
+  async success(opts = {}) {
+    await _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_SUCCESS, opts, {
+      message: opts.message,
+      header: opts.header,
+      title: opts.title,
+      icon: opts.icon
+    });
+    return {};
+  }
+  /**
+   * Show an error page.
+   *
+   * @param opts - Options bag.
+   * @param opts.message - The message text or components to display in the page.
+   * @param opts.header - The text or components to display in the header of the page.
+   * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.
+   * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+   * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+   * @returns Empty object to support future additions.
+   */
+  async error(opts = {}) {
+    await _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _result, result_fn).call(this, APPROVAL_TYPE_RESULT_ERROR, opts, {
+      error: opts.error,
+      header: opts.header,
+      title: opts.title,
+      icon: opts.icon
+    });
+    return {};
+  }
+};
+_approvals = new WeakMap();
+_origins = new WeakMap();
+_showApprovalRequest = new WeakMap();
+_typesExcludedFromRateLimiting = new WeakMap();
+_add = new WeakSet();
+add_fn = function(origin, type, id = _nanoid.nanoid.call(void 0, ), requestData, requestState, expectsResult) {
+  _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _validateAddParams, validateAddParams_fn).call(this, id, origin, type, requestData, requestState);
+  if (!_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _typesExcludedFromRateLimiting).includes(type) && this.has({ origin, type })) {
+    throw _rpcerrors.rpcErrors.resourceUnavailable(
+      getAlreadyPendingMessage(origin, type)
+    );
+  }
+  return new Promise((resolve, reject) => {
+    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).set(id, { resolve, reject });
+    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _addPendingApprovalOrigin, addPendingApprovalOrigin_fn).call(this, origin, type);
+    _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _addToStore, addToStore_fn).call(this, id, origin, type, requestData, requestState, expectsResult);
+  });
+};
+_validateAddParams = new WeakSet();
+validateAddParams_fn = function(id, origin, type, requestData, requestState) {
+  let errorMessage = null;
+  if (!id || typeof id !== "string") {
+    errorMessage = "Must specify non-empty string id.";
+  } else if (_chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).has(id)) {
+    errorMessage = `Approval request with id '${id}' already exists.`;
+  } else if (!origin || typeof origin !== "string") {
+    errorMessage = "Must specify non-empty string origin.";
+  } else if (!type || typeof type !== "string") {
+    errorMessage = "Must specify non-empty string type.";
+  } else if (requestData && (typeof requestData !== "object" || Array.isArray(requestData))) {
+    errorMessage = "Request data must be a plain object if specified.";
+  } else if (requestState && (typeof requestState !== "object" || Array.isArray(requestState))) {
+    errorMessage = "Request state must be a plain object if specified.";
+  }
+  if (errorMessage) {
+    throw _rpcerrors.rpcErrors.internal(errorMessage);
+  }
+};
+_addPendingApprovalOrigin = new WeakSet();
+addPendingApprovalOrigin_fn = function(origin, type) {
+  let originMap = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin);
+  if (!originMap) {
+    originMap = /* @__PURE__ */ new Map();
+    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).set(origin, originMap);
+  }
+  const currentValue = originMap.get(type) || 0;
+  originMap.set(type, currentValue + 1);
+};
+_addToStore = new WeakSet();
+addToStore_fn = function(id, origin, type, requestData, requestState, expectsResult) {
+  const approval = {
+    id,
+    origin,
+    type,
+    time: Date.now(),
+    requestData: requestData || null,
+    requestState: requestState || null,
+    expectsResult: expectsResult || false
+  };
+  this.update((draftState) => {
+    draftState.pendingApprovals[id] = approval;
+    draftState.pendingApprovalCount = Object.keys(
+      draftState.pendingApprovals
+    ).length;
+  });
+};
+_delete = new WeakSet();
+delete_fn = function(id) {
+  _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).delete(id);
+  const { origin, type } = this.state.pendingApprovals[id];
+  const originMap = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).get(origin);
+  const originTotalCount = this.getApprovalCount({ origin });
+  const originTypeCount = originMap.get(type);
+  if (originTotalCount === 1) {
+    _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _origins).delete(origin);
+  } else {
+    originMap.set(type, originTypeCount - 1);
+  }
+  this.update((draftState) => {
+    delete draftState.pendingApprovals[id];
+    draftState.pendingApprovalCount = Object.keys(
+      draftState.pendingApprovals
+    ).length;
+  });
+};
+_deleteApprovalAndGetCallbacks = new WeakSet();
+deleteApprovalAndGetCallbacks_fn = function(id) {
+  const callbacks = _chunkLKCXZAKDjs.__privateGet.call(void 0, this, _approvals).get(id);
+  if (!callbacks) {
+    throw new (0, _chunkLKCXZAKDjs.ApprovalRequestNotFoundError)(id);
+  }
+  _chunkLKCXZAKDjs.__privateMethod.call(void 0, this, _delete, delete_fn).call(this, id);
+  return callbacks;
+};
+_result = new WeakSet();
+result_fn = async function(type, opts, requestData) {
+  try {
+    await this.addAndShowApprovalRequest({
+      origin: ORIGIN_METAMASK,
+      type,
+      requestData
+    });
+  } catch (error) {
+    console.info("Failed to display result page", error);
+  } finally {
+    if (opts.flowToEnd) {
+      try {
+        this.endFlow({ id: opts.flowToEnd });
+      } catch (error) {
+        console.info("Failed to end flow", { id: opts.flowToEnd, error });
+      }
+    }
+  }
+};
+var ApprovalController_default = ApprovalController;
+
+
+
+
+
+
+
+exports.ORIGIN_METAMASK = ORIGIN_METAMASK; exports.APPROVAL_TYPE_RESULT_ERROR = APPROVAL_TYPE_RESULT_ERROR; exports.APPROVAL_TYPE_RESULT_SUCCESS = APPROVAL_TYPE_RESULT_SUCCESS; exports.ApprovalController = ApprovalController; exports.ApprovalController_default = ApprovalController_default;
+//# sourceMappingURL=chunk-PMXPCCKS.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/errors.cjs.map b/node_modules/@metamask/approval-controller/dist/errors.cjs.map
deleted file mode 100644
index 97a5e2c..0000000
--- a/node_modules/@metamask/approval-controller/dist/errors.cjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"errors.cjs","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":";;;AAAA,MAAa,4BAA6B,SAAQ,KAAK;IACrD,YAAY,EAAU;QACpB,KAAK,CAAC,6BAA6B,EAAE,cAAc,CAAC,CAAC;IACvD,CAAC;CACF;AAJD,oEAIC;AAED,MAAa,mCAAoC,SAAQ,KAAK;IAC5D,YAAY,EAAU;QACpB,KAAK,CACH,6DAA6D,EAAE,wBAAwB,CACxF,CAAC;IACJ,CAAC;CACF;AAND,kFAMC;AAED,MAAa,oBAAqB,SAAQ,KAAK;IAC7C;QACE,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACpC,CAAC;CACF;AAJD,oDAIC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC5C,YAAY,EAAU,EAAE,OAAiB;QACvC,KAAK,CACH,kCAAkC,EAAE,gDAClC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,iBAAiB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACtC,CAAC;IACJ,CAAC;CACF;AARD,kDAQC;AAED,MAAa,wBAAyB,SAAQ,KAAK;IACjD,YAAY,EAAU;QACpB,KAAK,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;CACF;AAJD,4DAIC","sourcesContent":["export class ApprovalRequestNotFoundError extends Error {\n  constructor(id: string) {\n    super(`Approval request with id '${id}' not found.`);\n  }\n}\n\nexport class ApprovalRequestNoResultSupportError extends Error {\n  constructor(id: string) {\n    super(\n      `Approval acceptance requested result but request with id '${id}' does not support it.`,\n    );\n  }\n}\n\nexport class NoApprovalFlowsError extends Error {\n  constructor() {\n    super(`No approval flows found.`);\n  }\n}\n\nexport class EndInvalidFlowError extends Error {\n  constructor(id: string, flowIds: string[]) {\n    super(\n      `Attempted to end flow with id '${id}' which does not match current flow with id '${\n        flowIds.slice(-1)[0]\n      }'. All Flows: ${flowIds.join(', ')}`,\n    );\n  }\n}\n\nexport class MissingApprovalFlowError extends Error {\n  constructor(id: string) {\n    super(`No approval flows found with id '${id}'.`);\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/errors.d.cts.map b/node_modules/@metamask/approval-controller/dist/errors.d.cts.map
deleted file mode 100644
index 15c3022..0000000
--- a/node_modules/@metamask/approval-controller/dist/errors.d.cts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"errors.d.cts","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":"AAAA,qBAAa,4BAA6B,SAAQ,KAAK;gBACzC,EAAE,EAAE,MAAM;CAGvB;AAED,qBAAa,mCAAoC,SAAQ,KAAK;gBAChD,EAAE,EAAE,MAAM;CAKvB;AAED,qBAAa,oBAAqB,SAAQ,KAAK;;CAI9C;AAED,qBAAa,mBAAoB,SAAQ,KAAK;gBAChC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;CAO1C;AAED,qBAAa,wBAAyB,SAAQ,KAAK;gBACrC,EAAE,EAAE,MAAM;CAGvB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/errors.d.mts.map b/node_modules/@metamask/approval-controller/dist/errors.d.mts.map
deleted file mode 100644
index 7b6e54b..0000000
--- a/node_modules/@metamask/approval-controller/dist/errors.d.mts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"errors.d.mts","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":"AAAA,qBAAa,4BAA6B,SAAQ,KAAK;gBACzC,EAAE,EAAE,MAAM;CAGvB;AAED,qBAAa,mCAAoC,SAAQ,KAAK;gBAChD,EAAE,EAAE,MAAM;CAKvB;AAED,qBAAa,oBAAqB,SAAQ,KAAK;;CAI9C;AAED,qBAAa,mBAAoB,SAAQ,KAAK;gBAChC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;CAO1C;AAED,qBAAa,wBAAyB,SAAQ,KAAK;gBACrC,EAAE,EAAE,MAAM;CAGvB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/errors.js b/node_modules/@metamask/approval-controller/dist/errors.js
new file mode 100644
index 0000000..8b45327
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/errors.js
@@ -0,0 +1,15 @@
+"use strict";Object.defineProperty(exports, "__esModule", {value: true});
+
+
+
+
+
+var _chunkLKCXZAKDjs = require('./chunk-LKCXZAKD.js');
+
+
+
+
+
+
+exports.ApprovalRequestNoResultSupportError = _chunkLKCXZAKDjs.ApprovalRequestNoResultSupportError; exports.ApprovalRequestNotFoundError = _chunkLKCXZAKDjs.ApprovalRequestNotFoundError; exports.EndInvalidFlowError = _chunkLKCXZAKDjs.EndInvalidFlowError; exports.MissingApprovalFlowError = _chunkLKCXZAKDjs.MissingApprovalFlowError; exports.NoApprovalFlowsError = _chunkLKCXZAKDjs.NoApprovalFlowsError;
+//# sourceMappingURL=errors.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/errors.mjs.map b/node_modules/@metamask/approval-controller/dist/errors.mjs.map
deleted file mode 100644
index ce996bf..0000000
--- a/node_modules/@metamask/approval-controller/dist/errors.mjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"errors.mjs","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,4BAA6B,SAAQ,KAAK;IACrD,YAAY,EAAU;QACpB,KAAK,CAAC,6BAA6B,EAAE,cAAc,CAAC,CAAC;IACvD,CAAC;CACF;AAED,MAAM,OAAO,mCAAoC,SAAQ,KAAK;IAC5D,YAAY,EAAU;QACpB,KAAK,CACH,6DAA6D,EAAE,wBAAwB,CACxF,CAAC;IACJ,CAAC;CACF;AAED,MAAM,OAAO,oBAAqB,SAAQ,KAAK;IAC7C;QACE,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACpC,CAAC;CACF;AAED,MAAM,OAAO,mBAAoB,SAAQ,KAAK;IAC5C,YAAY,EAAU,EAAE,OAAiB;QACvC,KAAK,CACH,kCAAkC,EAAE,gDAClC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,iBAAiB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACtC,CAAC;IACJ,CAAC;CACF;AAED,MAAM,OAAO,wBAAyB,SAAQ,KAAK;IACjD,YAAY,EAAU;QACpB,KAAK,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;CACF","sourcesContent":["export class ApprovalRequestNotFoundError extends Error {\n  constructor(id: string) {\n    super(`Approval request with id '${id}' not found.`);\n  }\n}\n\nexport class ApprovalRequestNoResultSupportError extends Error {\n  constructor(id: string) {\n    super(\n      `Approval acceptance requested result but request with id '${id}' does not support it.`,\n    );\n  }\n}\n\nexport class NoApprovalFlowsError extends Error {\n  constructor() {\n    super(`No approval flows found.`);\n  }\n}\n\nexport class EndInvalidFlowError extends Error {\n  constructor(id: string, flowIds: string[]) {\n    super(\n      `Attempted to end flow with id '${id}' which does not match current flow with id '${\n        flowIds.slice(-1)[0]\n      }'. All Flows: ${flowIds.join(', ')}`,\n    );\n  }\n}\n\nexport class MissingApprovalFlowError extends Error {\n  constructor(id: string) {\n    super(`No approval flows found with id '${id}'.`);\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/index.cjs.map b/node_modules/@metamask/approval-controller/dist/index.cjs.map
deleted file mode 100644
index 33a893b..0000000
--- a/node_modules/@metamask/approval-controller/dist/index.cjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2DAAqC;AACrC,+CAAyB","sourcesContent":["export * from './ApprovalController';\nexport * from './errors';\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/index.d.cts.map b/node_modules/@metamask/approval-controller/dist/index.d.cts.map
deleted file mode 100644
index 62dcccc..0000000
--- a/node_modules/@metamask/approval-controller/dist/index.d.cts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.cts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,yCAAqC;AACrC,6BAAyB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/index.d.mts.map b/node_modules/@metamask/approval-controller/dist/index.d.mts.map
deleted file mode 100644
index 77eb830..0000000
--- a/node_modules/@metamask/approval-controller/dist/index.d.mts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.mts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,yCAAqC;AACrC,6BAAyB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/index.js b/node_modules/@metamask/approval-controller/dist/index.js
new file mode 100644
index 0000000..59a39d3
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/index.js
@@ -0,0 +1,25 @@
+"use strict";Object.defineProperty(exports, "__esModule", {value: true});
+
+
+
+
+var _chunkPMXPCCKSjs = require('./chunk-PMXPCCKS.js');
+
+
+
+
+
+
+var _chunkLKCXZAKDjs = require('./chunk-LKCXZAKD.js');
+
+
+
+
+
+
+
+
+
+
+exports.APPROVAL_TYPE_RESULT_ERROR = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_ERROR; exports.APPROVAL_TYPE_RESULT_SUCCESS = _chunkPMXPCCKSjs.APPROVAL_TYPE_RESULT_SUCCESS; exports.ApprovalController = _chunkPMXPCCKSjs.ApprovalController; exports.ApprovalRequestNoResultSupportError = _chunkLKCXZAKDjs.ApprovalRequestNoResultSupportError; exports.ApprovalRequestNotFoundError = _chunkLKCXZAKDjs.ApprovalRequestNotFoundError; exports.EndInvalidFlowError = _chunkLKCXZAKDjs.EndInvalidFlowError; exports.MissingApprovalFlowError = _chunkLKCXZAKDjs.MissingApprovalFlowError; exports.NoApprovalFlowsError = _chunkLKCXZAKDjs.NoApprovalFlowsError; exports.ORIGIN_METAMASK = _chunkPMXPCCKSjs.ORIGIN_METAMASK;
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/index.mjs.map b/node_modules/@metamask/approval-controller/dist/index.mjs.map
deleted file mode 100644
index 3288d49..0000000
--- a/node_modules/@metamask/approval-controller/dist/index.mjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.mjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,yCAAqC;AACrC,6BAAyB","sourcesContent":["export * from './ApprovalController';\nexport * from './errors';\n"]}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/tsconfig.build.tsbuildinfo b/node_modules/@metamask/approval-controller/dist/tsconfig.build.tsbuildinfo
new file mode 100644
index 0000000..0043610
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/tsconfig.build.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../types/eth-ens-namehash.d.ts","../../../types/ethereum-ens-network-map.d.ts","../../../types/ethjs-query.d.ts","../../../types/global.d.ts","../../../types/single-call-balance-checker-abi.d.ts","../../../types/@metamask/contract-metadata.d.ts","../../../types/@metamask/eth-hd-keyring.d.ts","../../../types/@metamask/eth-simple-keyring.d.ts","../../../types/@metamask/ethjs-provider-http.d.ts","../../../types/@metamask/ethjs-unit.d.ts","../../../types/@metamask/metamask-eth-abis.d.ts","../../../types/eth-json-rpc-infura/src/createprovider.d.ts","../../../types/eth-phishing-detect/src/config.json.d.ts","../../../types/eth-phishing-detect/src/detector.d.ts","../../../node_modules/@metamask/superstruct/dist/error.d.cts","../../../node_modules/@metamask/superstruct/dist/utils.d.cts","../../../node_modules/@metamask/superstruct/dist/struct.d.cts","../../../node_modules/@metamask/superstruct/dist/structs/coercions.d.cts","../../../node_modules/@metamask/superstruct/dist/structs/refinements.d.cts","../../../node_modules/@metamask/superstruct/dist/structs/types.d.cts","../../../node_modules/@metamask/superstruct/dist/structs/utilities.d.cts","../../../node_modules/@metamask/superstruct/dist/index.d.cts","../../../node_modules/@metamask/utils/dist/assert.d.cts","../../../node_modules/@metamask/utils/dist/base64.d.cts","../../../node_modules/@metamask/utils/dist/hex.d.cts","../../../node_modules/@metamask/utils/dist/bytes.d.cts","../../../node_modules/@metamask/utils/dist/caip-types.d.cts","../../../node_modules/@metamask/utils/dist/checksum.d.cts","../../../node_modules/@metamask/utils/dist/coercers.d.cts","../../../node_modules/@metamask/utils/dist/collections.d.cts","../../../node_modules/@metamask/utils/dist/encryption-types.d.cts","../../../node_modules/@metamask/utils/dist/errors.d.cts","../../../node_modules/@metamask/utils/dist/json.d.cts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/globals.global.d.ts","../../../node_modules/@types/node/index.d.ts","../../../node_modules/@ethereumjs/common/dist/enums.d.ts","../../../node_modules/@ethereumjs/common/dist/types.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/@ethereumjs/util/dist/constants.d.ts","../../../node_modules/@ethereumjs/util/dist/units.d.ts","../../../node_modules/@ethereumjs/util/dist/address.d.ts","../../../node_modules/@ethereumjs/util/dist/bytes.d.ts","../../../node_modules/@ethereumjs/util/dist/types.d.ts","../../../node_modules/@ethereumjs/util/dist/account.d.ts","../../../node_modules/@ethereumjs/util/dist/withdrawal.d.ts","../../../node_modules/@ethereumjs/util/dist/signature.d.ts","../../../node_modules/@ethereumjs/util/dist/encoding.d.ts","../../../node_modules/@ethereumjs/util/dist/asynceventemitter.d.ts","../../../node_modules/@ethereumjs/util/dist/internal.d.ts","../../../node_modules/@ethereumjs/util/dist/lock.d.ts","../../../node_modules/@ethereumjs/util/dist/provider.d.ts","../../../node_modules/@ethereumjs/util/dist/index.d.ts","../../../node_modules/@ethereumjs/common/dist/common.d.ts","../../../node_modules/@ethereumjs/common/dist/utils.d.ts","../../../node_modules/@ethereumjs/common/dist/index.d.ts","../../../node_modules/@ethereumjs/tx/dist/eip2930transaction.d.ts","../../../node_modules/@ethereumjs/tx/dist/legacytransaction.d.ts","../../../node_modules/@ethereumjs/tx/dist/types.d.ts","../../../node_modules/@ethereumjs/tx/dist/basetransaction.d.ts","../../../node_modules/@ethereumjs/tx/dist/eip1559transaction.d.ts","../../../node_modules/@ethereumjs/tx/dist/transactionfactory.d.ts","../../../node_modules/@ethereumjs/tx/dist/index.d.ts","../../../node_modules/@metamask/utils/dist/keyring.d.cts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@metamask/utils/dist/logging.d.cts","../../../node_modules/@metamask/utils/dist/misc.d.cts","../../../node_modules/@metamask/utils/dist/number.d.cts","../../../node_modules/@metamask/utils/dist/opaque.d.cts","../../../node_modules/@metamask/utils/dist/promise.d.cts","../../../node_modules/@metamask/utils/dist/time.d.cts","../../../node_modules/@metamask/utils/dist/transaction-types.d.cts","../../../node_modules/@metamask/utils/dist/versions.d.cts","../../../node_modules/@metamask/utils/dist/index.d.cts","../../../node_modules/immer/dist/utils/env.d.ts","../../../node_modules/immer/dist/utils/errors.d.ts","../../../node_modules/immer/dist/types/types-external.d.ts","../../../node_modules/immer/dist/types/types-internal.d.ts","../../../node_modules/immer/dist/utils/common.d.ts","../../../node_modules/immer/dist/utils/plugins.d.ts","../../../node_modules/immer/dist/core/scope.d.ts","../../../node_modules/immer/dist/core/finalize.d.ts","../../../node_modules/immer/dist/core/proxy.d.ts","../../../node_modules/immer/dist/core/immerclass.d.ts","../../../node_modules/immer/dist/core/current.d.ts","../../../node_modules/immer/dist/internal.d.ts","../../../node_modules/immer/dist/plugins/es5.d.ts","../../../node_modules/immer/dist/plugins/patches.d.ts","../../../node_modules/immer/dist/plugins/mapset.d.ts","../../../node_modules/immer/dist/plugins/all.d.ts","../../../node_modules/immer/dist/immer.d.ts","../../base-controller/dist/types/restrictedcontrollermessenger.d.ts","../../base-controller/dist/types/controllermessenger.d.ts","../../base-controller/dist/types/basecontrollerv2.d.ts","../../base-controller/dist/types/basecontrollerv1.d.ts","../../base-controller/dist/types/index.d.ts","../../../node_modules/@metamask/rpc-errors/dist/types/utils.d.ts","../../../node_modules/@metamask/rpc-errors/dist/types/classes.d.ts","../../../node_modules/@metamask/rpc-errors/dist/types/errors.d.ts","../../../node_modules/@metamask/rpc-errors/dist/types/error-constants.d.ts","../../../node_modules/@metamask/rpc-errors/dist/types/index.d.ts","../../../node_modules/nanoid/index.d.cts","../src/errors.ts","../src/approvalcontroller.ts","../src/index.ts","../../../node_modules/@babel/types/lib/index.d.ts","../../../node_modules/@types/babel__generator/index.d.ts","../../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../../node_modules/@types/babel__template/index.d.ts","../../../node_modules/@types/babel__traverse/index.d.ts","../../../node_modules/@types/babel__core/index.d.ts","../../../node_modules/@types/bn.js/index.d.ts","../../../node_modules/@types/deep-freeze-strict/index.d.ts","../../../node_modules/@types/eslint/helpers.d.ts","../../../node_modules/@types/estree/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/eslint/index.d.ts","../../../node_modules/@types/graceful-fs/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/istanbul-lib-report/index.d.ts","../../../node_modules/@types/istanbul-reports/index.d.ts","../../../node_modules/chalk/index.d.ts","../../../node_modules/jest-diff/build/cleanupsemantic.d.ts","../../../node_modules/pretty-format/build/types.d.ts","../../../node_modules/pretty-format/build/index.d.ts","../../../node_modules/jest-diff/build/types.d.ts","../../../node_modules/jest-diff/build/difflines.d.ts","../../../node_modules/jest-diff/build/printdiffs.d.ts","../../../node_modules/jest-diff/build/index.d.ts","../../../node_modules/jest-matcher-utils/build/index.d.ts","../../../node_modules/@types/jest/index.d.ts","../../../node_modules/@types/jest-when/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/lodash/common/common.d.ts","../../../node_modules/@types/lodash/common/array.d.ts","../../../node_modules/@types/lodash/common/collection.d.ts","../../../node_modules/@types/lodash/common/date.d.ts","../../../node_modules/@types/lodash/common/function.d.ts","../../../node_modules/@types/lodash/common/lang.d.ts","../../../node_modules/@types/lodash/common/math.d.ts","../../../node_modules/@types/lodash/common/number.d.ts","../../../node_modules/@types/lodash/common/object.d.ts","../../../node_modules/@types/lodash/common/seq.d.ts","../../../node_modules/@types/lodash/common/string.d.ts","../../../node_modules/@types/lodash/common/util.d.ts","../../../node_modules/@types/lodash/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/pbkdf2/index.d.ts","../../../node_modules/@types/prettier/index.d.ts","../../../node_modules/@types/punycode/index.d.ts","../../../node_modules/@types/readable-stream/node_modules/safe-buffer/index.d.ts","../../../node_modules/@types/readable-stream/index.d.ts","../../../node_modules/@types/secp256k1/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/@types/stack-utils/index.d.ts","../../../node_modules/@types/uuid/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts"],"fileInfos":[{"version":"2ac9cdcfb8f8875c18d14ec5796a8b029c426f73ad6dc3ffb580c228b58d1c44","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"dc48272d7c333ccf58034c0026162576b7d50ea0e69c3b9292f803fc20720fd5","impliedFormat":1},{"version":"9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"0075fa5ceda385bcdf3488e37786b5a33be730e8bc4aa3cf1e78c63891752ce8","affectsGlobalScope":true,"impliedFormat":1},{"version":"f296963760430fb65b4e5d91f0ed770a91c6e77455bacf8fa23a1501654ede0e","affectsGlobalScope":true,"impliedFormat":1},{"version":"09226e53d1cfda217317074a97724da3e71e2c545e18774484b61562afc53cd2","affectsGlobalScope":true,"impliedFormat":1},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b41361862022eb72fcc8a7f34680ac842aca802cf4bc1f915e8c620c9ce4331","affectsGlobalScope":true,"impliedFormat":1},{"version":"f7bd636ae3a4623c503359ada74510c4005df5b36de7f23e1db8a5c543fd176b","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"0c20f4d2358eb679e4ae8a4432bdd96c857a2960fd6800b21ec4008ec59d60ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true,"impliedFormat":1},{"version":"82d0d8e269b9eeac02c3bd1c9e884e85d483fcb2cd168bccd6bc54df663da031","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"b8deab98702588840be73d67f02412a2d45a417a3c097b2e96f7f3a42ac483d1","affectsGlobalScope":true,"impliedFormat":1},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"376d554d042fb409cb55b5cbaf0b2b4b7e669619493c5d18d5fa8bd67273f82a","affectsGlobalScope":true,"impliedFormat":1},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true,"impliedFormat":1},{"version":"c4138a3dd7cd6cf1f363ca0f905554e8d81b45844feea17786cdf1626cb8ea06","affectsGlobalScope":true,"impliedFormat":1},{"version":"6ff3e2452b055d8f0ec026511c6582b55d935675af67cdb67dd1dc671e8065df","affectsGlobalScope":true,"impliedFormat":1},{"version":"03de17b810f426a2f47396b0b99b53a82c1b60e9cba7a7edda47f9bb077882f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"8184c6ddf48f0c98429326b428478ecc6143c27f79b79e85740f17e6feb090f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"261c4d2cf86ac5a89ad3fb3fafed74cbb6f2f7c1d139b0540933df567d64a6ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"6af1425e9973f4924fca986636ac19a0cf9909a7e0d9d3009c349e6244e957b6","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"15a630d6817718a2ddd7088c4f83e4673fde19fa992d2eae2cf51132a302a5d3","affectsGlobalScope":true,"impliedFormat":1},{"version":"b7e9f95a7387e3f66be0ed6db43600c49cec33a3900437ce2fd350d9b7cb16f2","affectsGlobalScope":true,"impliedFormat":1},{"version":"01e0ee7e1f661acedb08b51f8a9b7d7f959e9cdb6441360f06522cc3aea1bf2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac17a97f816d53d9dd79b0d235e1c0ed54a8cc6a0677e9a3d61efb480b2a3e4e","affectsGlobalScope":true,"impliedFormat":1},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true,"impliedFormat":1},{"version":"ec0104fee478075cb5171e5f4e3f23add8e02d845ae0165bfa3f1099241fa2aa","affectsGlobalScope":true,"impliedFormat":1},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true,"impliedFormat":1},{"version":"9cc66b0513ad41cb5f5372cca86ef83a0d37d1c1017580b7dace3ea5661836df","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"307c8b7ebbd7f23a92b73a4c6c0a697beca05b06b036c23a34553e5fe65e4fdc","affectsGlobalScope":true,"impliedFormat":1},{"version":"f35a831e4f0fe3b3697f4a0fe0e3caa7624c92b78afbecaf142c0f93abfaf379","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"70bbfaec021ac4a0c805374225b55d70887f987df8b8dd7711d79464bb7b4385","impliedFormat":1},{"version":"869089d60b67219f63e6aca810284c89bae1b384b5cbc7ce64e53d82ad223ed5","impliedFormat":1},{"version":"fe8f00e1ffe6c8069f2568844debb342a661980c30e52b132f002b93f66de47e","impliedFormat":1},{"version":"f31113ac9492fdd6e78bf6151b338c92e5b1837be426ef4aa0648ce82d13b518","affectsGlobalScope":true,"impliedFormat":1},{"version":"62a0875a0397b35a2364f1d401c0ce17975dfa4d47bf6844de858ae04da349f9","impliedFormat":1},{"version":"ee7491d0318d1fafcba97d5b72b450eb52671570f7a4ecd9e8898d40eaae9472","impliedFormat":1},{"version":"e3e7d217d89b380c1f34395eadc9289542851b0f0a64007dfe1fb7cf7423d24e","impliedFormat":1},{"version":"fd79909e93b4d50fd0ed9f3d39ddf8ba0653290bac25c295aac49f6befbd081b","impliedFormat":1},{"version":"345a9cc2945406f53051cd0e9b51f82e1e53929848eab046fdda91ee8aa7da31","impliedFormat":1},{"version":"9debe2de883da37a914e5e784a7be54c201b8f1d783822ad6f443ff409a5ea21","impliedFormat":1},{"version":"dee5d5c5440cda1f3668f11809a5503c30db0476ad117dd450f7ba5a45300e8f","impliedFormat":1},{"version":"f5e396c1424c391078c866d6f84afe0b4d2f7f85a160b9c756cd63b5b1775d93","impliedFormat":1},{"version":"5caa6f4fff16066d377d4e254f6c34c16540da3809cd66cd626a303bc33c419f","impliedFormat":1},{"version":"730d055528bdf12c8524870bb33d237991be9084c57634e56e5d8075f6605e02","impliedFormat":1},{"version":"c26b7050e19f8f555605db02f6cfae645ec7928d2dd6f428790e01a163795f97","impliedFormat":1},{"version":"df877ab086035627f1d36150d33204d3d7d097b67a41b8d31f621afd32b618ba","impliedFormat":1},{"version":"30a340292b28c797f55fe80ccab953d6ff310165a5c871717a0ff7ba474b05c6","impliedFormat":1},{"version":"d2e0607a2ea008ec9f4cf46954e8e21c94bd42373bdb780ed8f27d8deab90907","impliedFormat":1},{"version":"8a6e0aeb87d2ec01563a82b20f98e0a740d81d8e600286fb378b39c1cf0905b4","impliedFormat":1},{"version":"d645973bd03c1b0b0d2817ffcfc6346c7e6ce94df7cf6a46087d27a347eb6f73","impliedFormat":1},{"version":"17ae0674c777ae1c8f912c247b0195604494b417d8da457ac6dfec8907a180c1","impliedFormat":1},{"version":"4cb8668d4cdad969d15718ffed6a75a68ffa026b3d4208a37a5842dc3f8aee9f","impliedFormat":1},{"version":"8e775a861341ec44847ac043ab2b60edc18dafc6b895acbb5f5628b465c61f62","impliedFormat":1},{"version":"69896bb78fcf1307b0f592839c8f1a7f6977bc4d55ec1fb2db046c8c7c0c25ae","impliedFormat":1},{"version":"c8ef51808d56e538840e26043483eab15df31026cf2b3fd47a279b0eec01fa69","impliedFormat":1},{"version":"11f688c9704ffff4c6dd7b9892d379b5f36f4e7408833168fe491181e5e049fe","impliedFormat":1},{"version":"05f81de0826c2631a7fce8bdbce6a79773ab397a122670c19564c8246b43a45a","impliedFormat":1},{"version":"70dbd132cafd25ff48f589e4adc467eefe258f640a651b3846fe9218e0ee2fe3","impliedFormat":1},{"version":"457b8e22ca4672e962ec7b55ab0cc5d68cfcdd8cf4ffba250df9e6c1eb0540a5","impliedFormat":1},{"version":"30e81e0d15a6cca02397e1aa517166e03ce0a28f0e6d53e25440ef22b31f64ab","impliedFormat":1},{"version":"d85503a3b889c475f2a56348c44d7c2aba42e5a7587fa06bbc46ccdd4258bd94","impliedFormat":1},{"version":"3442bd24d7d746b3a79f2bc44d8456f58ea4d841dbf6eced8c41607e980287c0","impliedFormat":1},{"version":"57540a291cb6fbd3b75616d3db9cf2b27a5f6b96733774ccac542432b86b8daa","impliedFormat":1},{"version":"3e0d35597ff6c5142082e60814fa39c8a2077a58d8a6a262e619afb5f855f6ba","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"056097110efd16869ec118cedb44ecbac9a019576eee808d61304ca6d5cb2cbe","affectsGlobalScope":true,"impliedFormat":1},{"version":"f51b4042a3ac86f1f707500a9768f88d0b0c1fc3f3e45a73333283dea720cdc6","impliedFormat":1},{"version":"4e77922a2627fe9a0cc6c96adddc7cc5b3c0666b2581b812582380714cd4492a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3dca3e952c8df3d5f78c55e53b6bb735bebf323ec6bae656c503e892cd4eb78d","impliedFormat":1},{"version":"661a11d16ad2e3543a77c53bcd4017ee9a450f47ab7def3ab493a86eae4d550c","impliedFormat":1},{"version":"8cdc646cec7819581ef343b83855b1bfe4fe674f2c84f4fb8dc90d82fb56bd3a","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"a847ac812e3f49e72601b1462faa1f80984b3e606190f548f4dfe9f0c8ef35cf","impliedFormat":1},{"version":"6c39d4dbdb372b364442854e42d8c473e2ec67badb226745af17ed5ac41ce6f5","impliedFormat":1},{"version":"7693b90b3075deaccafd5efb467bf9f2b747a3075be888652ef73e64396d8628","impliedFormat":1},{"version":"1bcc1e650cb04a29b65ef9227290792476ea416b5c342ce025417727618ecf6f","impliedFormat":1},{"version":"988b518a683e0203d1a4aa56dce733814299e0869d87da5899b098baa08fb40f","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4a3399b36463f19d8b5654caee162eb9def18c1ba3f735ba3c06413ab0b72a5","impliedFormat":1},{"version":"f7f13beb30daef3fabb51734f79aa39a876569b528364871ef91a5e01b9733d2","affectsGlobalScope":true,"impliedFormat":1},{"version":"171d02c5040b15102025d9e6357cc884e36c232a7e491c6be6259d85e9ac8437","impliedFormat":1},{"version":"addacad25729b8ba7c3f8cdd74a3afa191dbdd46e4efcc7b7db2ec4f8f0b9f71","impliedFormat":1},{"version":"aaa36a3ede6e754b88ad45ac785de8563f1808937e4a133f13fe36e22dac0593","impliedFormat":1},{"version":"bb6d313b87960df2630a8dd9119751723e3600038e5ca123ccaf9a15f47e9eaa","impliedFormat":1},{"version":"7e4217814fc7349400fa44f24d53f0932b6b0b70b21ea9024225f634afa998a1","impliedFormat":1},{"version":"43ec77c369473e92e2ecebf0554a0fdaa9c256644a6070f28228dfcceec77351","impliedFormat":1},{"version":"2dc06aeb1e2a47b03dfbe68952956fc9b82afed9a921424f91b9ba00e1d3205a","affectsGlobalScope":true,"impliedFormat":1},{"version":"d2388edcfda2b2f9a9762b196387b95e0b688f6c3e21ff8a86c6a7518f8ce0a8","impliedFormat":1},{"version":"4be60abb12ee8573738f06e47e3fe99436669d4b3546f0ae7a9a59b93fba3951","impliedFormat":1},{"version":"dd67d2b5e4e8a182a38de8e69fb736945eaa4588e0909c14e01a14bd3cc1fd1e","impliedFormat":1},{"version":"c161a5c9072c8807a3369d940ab0b9d2d98ed406c080afa6063ebc7ee20eb44d","affectsGlobalScope":true,"impliedFormat":1},{"version":"0d09f4b48899d342b5d6cd846f95f969a401933b0dcd375a8a7e45832328bb86","affectsGlobalScope":true,"impliedFormat":1},{"version":"cc6ef5733d4ea6d2e06310a32dffd2c16418b467c5033d49cecc4f3a25de7497","impliedFormat":1},{"version":"94768454c3348b6ebe48e45fbad8c92e2bb7af4a35243edbe2b90823d0bd7f9a","impliedFormat":1},{"version":"0be79b3ff0f16b6c2f9bc8c4cc7097ea417d8d67f8267f7e1eec8e32b548c2ff","impliedFormat":1},{"version":"88e485c93a1443952cb336167d49b82c33f6c0ca598608c943dc44f724f13e72","impliedFormat":1},{"version":"1ad9ae9e496d80dfb5cd49c7958aca4d48647599f2599d2ca1c67a72c23c7899","impliedFormat":1},{"version":"269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","impliedFormat":1},{"version":"6e191fea1db6e9e4fa828259cf489e820ec9170effff57fb081a2f3295db4722","impliedFormat":1},{"version":"aed943465fbce1efe49ee16b5ea409050f15cd8eaf116f6fadb64ef0772e7d95","impliedFormat":1},{"version":"70d08483a67bf7050dbedace398ef3fee9f436fcd60517c97c4c1e22e3c6f3e8","impliedFormat":1},{"version":"f71188f97c9f7d309798ec02a56dd3bf50a4e4d079b3480f275ac13719953898","impliedFormat":1},{"version":"e933de8143e1d12dd51d89b398760fd5a9081896be366dad88a922d0b29f3c69","affectsGlobalScope":true,"impliedFormat":1},{"version":"4e228e78c1e9b0a75c70588d59288f63a6258e8b1fe4a67b0c53fe03461421d9","impliedFormat":1},{"version":"c92436ab2b0f306458fefa7121f81edd53c9b4bb3bb92d8b1cf6c9a2355e944b","impliedFormat":1},{"version":"8e1f7c597c91a204847ea79b8f225ebe2e817278959b41afaabc5a297dfe802b","impliedFormat":1},{"version":"875c46cfd441e361416221859dc40617936fbbbe77c4b842b66b6a1fd74f2368","impliedFormat":1},{"version":"a05e2d784c9be7051c4ac87a407c66d2106e23490c18c038bbd0712bde7602fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"9f045c02a95c50d245e35aae2c070ac0a804f13c7a810f49f4b296361da133a7","affectsGlobalScope":true,"impliedFormat":1},{"version":"cf434b5c04792f62d6f4bdd5e2c8673f36e638e910333c172614d5def9b17f98","impliedFormat":1},{"version":"1d65d4798df9c2df008884035c41d3e67731f29db5ecb64cd7378797c7c53a2f","impliedFormat":1},{"version":"0faee6b555890a1cb106e2adc5d3ffd89545b1da894d474e9d436596d654998f","impliedFormat":1},{"version":"129f54f0e0b0dbf88d6578d627c54bd8599ecbdd9743b6788320d26e49fc5485","impliedFormat":1},{"version":"867f95abf1df444aab146b19847391fc2f922a55f6a970a27ed8226766cee29f","impliedFormat":1},{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true,"impliedFormat":1},{"version":"b0297b09e607bec9698cac7cf55463d6731406efb1161ee4d448293b47397c84","impliedFormat":1},{"version":"f9623ef5cecfa8ae05c1a3bb8cf81c0c723ec124e46f71e3104ef665fe74ad10","impliedFormat":1},{"version":"809a57de65ca328f47f4639ba1a8a4348af2c9f91a060e77bdd3dd92dd71b492","impliedFormat":1},{"version":"4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","impliedFormat":1},{"version":"016990463a717488f46aeba06125b987d0d7c77dc09d27d47ea2760f1af7f4da","impliedFormat":1},{"version":"692c448209a6699a345b5318ae2fc0612ee95c52812f0abf81dc902260ce572f","impliedFormat":1},{"version":"6ba92d2209defae5551c58f024665ad2fd965f03dd80e17b1bb1cee57ebd706a","impliedFormat":1},{"version":"d50fc26add4a7d835a29482544e4605558f3706fe14e191b1009ce70f76dadf0","impliedFormat":1},{"version":"39eb436d0226a590cc35f84b7bffae0fd613e2c4c83124be83969726df8cf269","impliedFormat":1},{"version":"e7dbb1423e552557b09a125be1c6772c94c169677146e3eaee95e6d1fc6851c8","impliedFormat":1},{"version":"aa184f01f3f0b540bddf441dc658bd472a59d519da188a2f048acb365e8ca77a","impliedFormat":1},{"version":"49798c9e2d9624bbc01cdf8371171b64a4eead49fef2853b69fe1bc2e7c75207","impliedFormat":1},{"version":"c7fb2b8c48f3a20faad1673b23366f24992afaf7d3854190e51d72e0dcad5bc8","impliedFormat":1},{"version":"c0a48e69d2a824fcf1fdd6ec59604e280c56998ac7a7e3a8514823db1de68cdd","impliedFormat":1},{"version":"4e78c87355f7e4fd9524d7582a14bf72771aeee33acb73a848de8bf2e44d8831","impliedFormat":1},{"version":"ff00f23ec0c6c986df2778657ef18073548634b31757bd496902cd00c183ae96","impliedFormat":1},{"version":"6c3351c0361b6fa16a3379508e2c4114cba7ad6d6bfcc0d5b2fb9f02aa2f83c4","impliedFormat":1},{"version":"69071e42231f3b87f71b076904875bdef914f01c3017eb6a39a33694e437b5e0","impliedFormat":1},{"version":"dee490d4ee8b309fcba02b3c49ab263b4a40946c1cd29e7b12e08b48c70cd9a2","impliedFormat":1},{"version":"7ddda341b1ad729e8da34de6378d9d1b3f64a7bef3a4a8fcdf4261c9a9c68ccb","impliedFormat":1},{"version":"174f185e6b6399ea73366bff1e454c5e54bef9b0804a57bef7f5009d1f21b9ad","impliedFormat":1},{"version":"e0d39ecd8a0627a45b9fece85425d5d048e2d0cf23d4c444d9594147605ca4bf","impliedFormat":1},{"version":"10b3b799f9675ebe2785104b5ac69a898accc5d32f86cda152fa646a2c3cdfc2","impliedFormat":1},{"version":"41ca098760de99ca2cc5de79e73e0b837e2661767e5772a983bc535ba4d86690","impliedFormat":1},{"version":"f78570ffe02941be6f7ad1b8a54642a1d6069d16cdbbb75bfe1cdf81610f0c69","impliedFormat":1},{"version":"c0a90b05dc7d2a78b2f90c9e2b1d464887ee23a71799acba659b0359785d07de","impliedFormat":1},{"version":"0557cef4f85111361244bad1e684ce9cadb326e582f78ad70d31c93ddb0d99f3","impliedFormat":1},{"version":"bf5413a1e4c9a2127b83ff92b52f9b3f344f91841ffb95a8a78eec6059730caf","impliedFormat":1},{"version":"c7d64c42ea284a34e9aa757537f7a37d79b07a04d409b1bea51f5a8ddda45e25","impliedFormat":1},{"version":"68cc8d6fcc2f270d7108f02f3ebc59480a54615be3e09a47e14527f349e9d53e","impliedFormat":1},{"version":"3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","impliedFormat":1},{"version":"04e90044c2e8fd4b0938a4d3f9d8e1efee7fd77ced068e4e6f0eea1102735e40","impliedFormat":1},{"version":"4ff91243ea4afd0a59dfe0704d069bcb4e23b413ba821667669102fe3ca78c78","impliedFormat":1},{"version":"b16327ee01357bc4b698d8d464e0050585d17357420f2b4d184c96abf6373990","impliedFormat":1},{"version":"e247271d2e5f60a37056511587b7c3df27f9abcf0a5ea95ed8cee786cef48478","impliedFormat":1},{"version":"01dfb59624113bd88e1059623cecd7943c845b09c4394acea0aa439786d13edb","impliedFormat":1},{"version":"fe81fb714ee64eb7219b1cabad2fcad57bbd38f9474a583d718c8eb82b6241e0","impliedFormat":1},{"version":"9bdfb026298a0a75c054478fdd19b0de4b1bf7dfbfff84781b0f1da25d81c6b4","impliedFormat":1},{"version":"3c332d20a736ef5b8e760ac9100f4fdd0022534d51e4f0f29d40eea9c15ecd86","impliedFormat":1},{"version":"6c1a41c6039219da236aba5ca487585e9e98958c885023f1d39c066b48949734","impliedFormat":1},{"version":"3f425f99f8dbc920370d86c5b7ebff7b2a710fd991b012559d35f9e4adee1661","impliedFormat":1},{"version":"1ad191863b99a80efa56eab1a724da76641fa0a31333dbdb1dca4e6bd182309a","impliedFormat":1},{"version":"2270cf0bacf7d694e3047c8fa13873b7025e6ddfa0f7b63acee44c1e9927bcc0","impliedFormat":1},{"version":"8ffc8385762a724b7eebfa8317152bfba4512168d6d906f1a9698a9a6038b47b","impliedFormat":1},{"version":"cfff1509be4fd735a305637de296711313d8660644b766c4e6b603baf7149b12","impliedFormat":1},{"version":"4535531d0b0bba5cfb0917f13f9d4a50cea4239895de55c02b0f6bc3f3eb646d","impliedFormat":1},{"version":"797ed7a333103aa45a7cebfaf9a04454b59a22a7faf2e9f5a743d9ee44cd8024","impliedFormat":1},{"version":"3cb7cceea4cf68d02e5eba1f412ef0706ba60fbefd8a9c5f3a839bfa35857967","impliedFormat":1},{"version":"3042247c61fa9d67ff654424d9864e2dc7b9ff080540b960cbcdba18002a375a","impliedFormat":1},{"version":"3e0b0c20c7c314d9278c0b6b08b8d84f4552fb4acbb641ddc33deb35dc54f723","impliedFormat":1},{"version":"2d3b3589a50def08e636031988f1344d7c26f1b6bbf3b0e0078922a6770d9bb1","impliedFormat":1},{"version":"92e8887e25fd27cacf0bd6b84d388536ff843d46e2eee88a1659369a19bf6453","impliedFormat":1},{"version":"08f2ee0e58420657f003cb53c801e3bbb08de2d0a3f4cb77ea8cf6f3675f3722","impliedFormat":1},{"version":"2ab874598ce7f5b3f693ce4e2de5647944845c50396b147f8a5f7c7d06dc0bc7","impliedFormat":1},{"version":"fc02a0675473c0fe3f528753abb9328a04122f4204856202b26c1ebaa35fb9e5","impliedFormat":1},{"version":"110afe66c4206c0a14e9777d421db05c1b77fbe1736c4bcde21cb98daa147116","impliedFormat":1},{"version":"a623ad0abc212091a2307c131f1c7711f5d38e3f8c1ddb1c3bc9c0eec212d213","impliedFormat":1},{"version":"39dbe5db5a67ad38a2a2dc840ca8158cc83cbc29e7cb4c3936099b1ae24889cf","impliedFormat":1},{"version":"bbf6b7a072488c5c4a68499e9e0c1af81ca51f51484d4b04961e2df855362675","impliedFormat":1},{"version":"e6e0f28c0149a76f6aa35f2640ac4ff9badfd08cb49475972e8a8c0dd109c1c0","impliedFormat":1},{"version":"a3c3378cb2e8113142c571eb3558e3639adab4d3fa7e5120b5dba770ae49c296","impliedFormat":1},{"version":"765d50f37d1ce20a5cb820cdb96b86a9e5f877a16f328beb4a1c446a6fc66736","impliedFormat":1},{"version":"a71638033db837b7bc9695de4956d73d6d43bf81ebe54e2596e70e1d6f2e6b3e","impliedFormat":1},{"version":"3c0ba2cea279d2ae0e050d4bf7d54ea4f653f2853ee337baf30e1e8ef166e2a2","impliedFormat":1},{"version":"e48c5852c61e2aa531513506b62d7eeb02d7cb4558d0ab1a98a667184c9e90e1","impliedFormat":1},{"version":"feaba0e6e474920bc61fc9026a6f8d0f9b4f1db73e79de68c849da87fe42b351","impliedFormat":1},{"version":"d779bc8387565e8f13d81a329ec3c3ea6696b20c7441b6804bc5c4f030cc0aca","impliedFormat":1},{"version":"a45ee7555d019a67fbe092898d1aef0b1d02a9f6679ab84461ff515b4460d706","impliedFormat":1},{"version":"47fc8d3105da26422943e3728d068da7766aab6aa2c475e4fbc406b09e1ac4df","signature":"df3fe991057a951202c2f6d5eedcf210e75fb6bf29bf262bd5cd40e7ae1bf17e","impliedFormat":1},{"version":"ab900400b6c68e69fc4661f17af3b528ba97f90618ef9228c08530130bee21df","signature":"a4bf9f436e49c5eef442d1ce8220a657fa63024a8c375e880c0f94caf21df9ac","impliedFormat":1},{"version":"f207c76b09220a4c22a544ef660cb257e0af11a3d63f163efab6701b641c1cea","impliedFormat":1},{"version":"e74998d5cefc2f29d583c10b99c1478fb810f1e46fbb06535bfb0bbba3c84aa5","impliedFormat":1},{"version":"2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","impliedFormat":1},{"version":"43d058146b002d075f5d0033a6870321048297f1658eb0db559ba028383803a6","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"9e0cf651e8e2c5b9bebbabdff2f7c6f8cedd91b1d9afcc0a854cdff053a88f1b","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"8aceb205dcc6f814ad99635baf1e40b6e01d06d3fe27b72fd766c6d0b8c0c600","impliedFormat":1},{"version":"8c95f96ccd4be0674944077aec1e4f2cccd515ca06d4327562dd017250e7d3fc","impliedFormat":1},{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true,"impliedFormat":1},{"version":"ee7d8894904b465b072be0d2e4b45cf6b887cdba16a467645c4e200982ece7ea","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","impliedFormat":1},{"version":"afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","impliedFormat":1},{"version":"035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","impliedFormat":1},{"version":"a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","impliedFormat":1},{"version":"5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","impliedFormat":1},{"version":"0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","impliedFormat":1},{"version":"d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","impliedFormat":1},{"version":"462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","impliedFormat":1},{"version":"5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","impliedFormat":1},{"version":"7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","impliedFormat":1},{"version":"dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","impliedFormat":1},{"version":"1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","impliedFormat":1},{"version":"8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","impliedFormat":1},{"version":"7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","impliedFormat":1},{"version":"ccfd8774cd9b929f63ff7dcf657977eb0652e3547f1fcac1b3a1dc5db22d4d58","affectsGlobalScope":true,"impliedFormat":1},{"version":"d92dc90fecd2552db74d8dc3c6fb4db9145b2aa0efe2c127236ba035969068d4","impliedFormat":1},{"version":"96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","impliedFormat":1},{"version":"ff81bffa4ecfceae2e86b5920c3fcb250b66b1d6ed72944dffdf58123be2481b","impliedFormat":1},{"version":"458111fc89d11d2151277c822dfdc1a28fa5b6b2493cf942e37d4cd0a6ee5f22","impliedFormat":1},{"version":"da2b6356b84a40111aaecb18304ea4e4fcb43d70efb1c13ca7d7a906445ee0d3","impliedFormat":1},{"version":"187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","impliedFormat":1},{"version":"aa2c18a1b5a086bbcaae10a4efba409cc95ba7287d8cf8f2591b53704fea3dea","impliedFormat":1},{"version":"6f294731b495c65ecf46a5694f0082954b961cf05463bea823f8014098eaffa0","impliedFormat":1},{"version":"0aaef8cded245bf5036a7a40b65622dd6c4da71f7a35343112edbe112b348a1e","impliedFormat":1},{"version":"00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","impliedFormat":1},{"version":"bdf0ed7d9ebae6175a5d1b4ec4065d07f8099379370a804b1faff05004dc387d","impliedFormat":1},{"version":"3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","impliedFormat":1},{"version":"b03afe4bec768ae333582915146f48b161e567a81b5ebc31c4d78af089770ac9","impliedFormat":1},{"version":"df996e25faa505f85aeb294d15ebe61b399cf1d1e49959cdfaf2cc0815c203f9","impliedFormat":1},{"version":"4f6a12044ee6f458db11964153830abbc499e73d065c51c329ec97407f4b13dd","impliedFormat":1},{"version":"8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","impliedFormat":1},{"version":"916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","impliedFormat":1},{"version":"254d9fb8c872d73d34594be8a200fd7311dbfa10a4116bfc465fba408052f2b3","impliedFormat":1},{"version":"d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","impliedFormat":1},{"version":"2ccea88888048bbfcacbc9531a5596ea48a3e7dcd0a25f531a81bb717903ba4f","impliedFormat":1},{"version":"5e379df3d61561c2ed7789b5995b9ba2143bbba21a905e2381e16efe7d1fa424","impliedFormat":1},{"version":"f07a137bbe2de7a122c37bfea00e761975fb264c49f18003d398d71b3fb35a5f","impliedFormat":1},{"version":"d8f7109e14f20eb735225a62fd3f8366da1a8349e90331cdad57f4b04caf6c5a","impliedFormat":1},{"version":"cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","impliedFormat":1},{"version":"9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","impliedFormat":1},{"version":"c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","impliedFormat":1},{"version":"8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","impliedFormat":1},{"version":"86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","impliedFormat":1},{"version":"42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","impliedFormat":1},{"version":"ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","impliedFormat":1},{"version":"83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","impliedFormat":1},{"version":"1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","impliedFormat":1},{"version":"0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","impliedFormat":1},{"version":"cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","impliedFormat":1},{"version":"c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","impliedFormat":1},{"version":"f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","impliedFormat":1},{"version":"0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","impliedFormat":1},{"version":"7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","impliedFormat":1},{"version":"bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","impliedFormat":1},{"version":"52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","impliedFormat":1},{"version":"770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","impliedFormat":1},{"version":"d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","impliedFormat":1},{"version":"799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","impliedFormat":1},{"version":"2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","impliedFormat":1},{"version":"9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","impliedFormat":1},{"version":"397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","impliedFormat":1},{"version":"a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","impliedFormat":1},{"version":"a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","impliedFormat":1},{"version":"c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","impliedFormat":1},{"version":"4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","impliedFormat":1},{"version":"f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","impliedFormat":1},{"version":"cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","impliedFormat":1},{"version":"b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","impliedFormat":1},{"version":"c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","impliedFormat":1},{"version":"14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","impliedFormat":1},{"version":"a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","impliedFormat":1},{"version":"f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","impliedFormat":1},{"version":"3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","impliedFormat":1},{"version":"662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","impliedFormat":1},{"version":"c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","impliedFormat":1},{"version":"2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","impliedFormat":1},{"version":"34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","impliedFormat":1},{"version":"7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","impliedFormat":1},{"version":"7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","impliedFormat":1},{"version":"9d92b037978bb9525bc4b673ebddd443277542e010c0aef019c03a170ccdaa73","impliedFormat":1},{"version":"ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","impliedFormat":1},{"version":"fab58e600970e66547644a44bc9918e3223aa2cbd9e8763cec004b2cfb48827e","impliedFormat":1},{"version":"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","impliedFormat":1},{"version":"ae271d475b632ce7b03fea6d9cf6da72439e57a109672671cbc79f54e1386938","impliedFormat":1}],"root":[[46,59],[199,201]],"options":{"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":true,"esModuleInterop":true,"inlineSources":true,"module":100,"outDir":"./types","rootDir":"../src","sourceMap":true,"strict":true,"target":7},"fileIdsList":[[202],[95,131,132,133,148],[132,133,149,150],[131,132],[131,148,151,154],[131,151,154,155],[152,153,154,156,157],[131,154],[131,148,151,152,153,156],[131,139],[131],[95,131],[83,131],[135,136,137,138,139,140,141,142,143,144,145,146,147],[131,137,138],[131,137,139],[170,193],[193,194],[193,194,195,196],[170],[60,61,62,63,64,65,66],[60,61],[62],[61,62],[60,62],[67],[70],[67,70],[68,69,70,71,72,73,74,75,76,77,78,159,162,163,164,165,166,167,168,169],[67,68],[70,76,78,158],[161],[70,71],[67,165],[202,203,204,205,206],[202,204],[160],[210,211,212],[96,131],[215],[216],[227],[221,226],[230,232,233,234,235,236,237,238,239,240,241,242],[230,231,233,234,235,236,237,238,239,240,241,242],[231,232,233,234,235,236,237,238,239,240,241,242],[230,231,232,234,235,236,237,238,239,240,241,242],[230,231,232,233,235,236,237,238,239,240,241,242],[230,231,232,233,234,236,237,238,239,240,241,242],[230,231,232,233,234,235,237,238,239,240,241,242],[230,231,232,233,234,235,236,238,239,240,241,242],[230,231,232,233,234,235,236,237,239,240,241,242],[230,231,232,233,234,235,236,237,238,240,241,242],[230,231,232,233,234,235,236,237,238,239,241,242],[230,231,232,233,234,235,236,237,238,239,240,242],[230,231,232,233,234,235,236,237,238,239,240,241],[79],[82],[83,88,115],[84,95,96,103,112,123],[84,85,95,103],[86,124],[87,88,96,104],[88,112,120],[89,91,95,103],[90],[91,92],[95],[94,95],[82,95],[95,96,97,112,123],[95,96,97,112],[95,98,103,112,123],[95,96,98,99,103,112,120,123],[98,100,112,120,123],[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],[95,101],[102,123,128],[91,95,103,112],[104],[105],[82,106],[107,122,128],[108],[109],[95,110],[110,111,124,126],[83,95,112,113,114],[83,112,114],[112,113],[115],[116],[95,118,119],[118,119],[88,103,112,120],[121],[103,122],[83,98,109,123],[88,124],[112,125],[126],[127],[83,88,95,97,106,112,123,126,128],[112,129],[131,248],[251,290],[251,275,290],[290],[251],[251,276,290],[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],[276,290],[291],[295],[182],[182,183,184,185,186],[171,172,173,174,175,176,177,178,179,180,181],[219,222],[219,222,223,224],[221],[218,225],[220],[170,192,197,198,199],[199,200],[170,190],[170,187,188,189,191],[188],[188,189,190,191],[189],[170,192,197]],"referencedMap":[[204,1],[149,2],[151,3],[133,4],[155,5],[156,6],[152,6],[158,7],[153,6],[157,8],[154,9],[140,10],[137,11],[144,12],[138,10],[135,13],[148,14],[142,11],[139,15],[141,16],[194,17],[195,18],[197,19],[193,20],[67,21],[62,22],[63,23],[64,23],[65,24],[66,24],[61,25],[68,26],[69,26],[71,27],[72,26],[73,26],[74,28],[70,26],[170,29],[78,30],[159,31],[162,32],[164,27],[168,33],[169,34],[207,35],[203,1],[205,36],[206,1],[208,11],[161,37],[213,38],[214,39],[216,40],[217,41],[228,42],[227,43],[231,44],[232,45],[230,46],[233,47],[234,48],[235,49],[236,50],[237,51],[238,52],[239,53],[240,54],[241,55],[242,56],[79,57],[80,57],[82,58],[83,59],[84,60],[85,61],[86,62],[87,63],[88,64],[89,65],[90,66],[91,67],[92,67],[93,68],[94,69],[95,70],[96,71],[97,72],[98,73],[99,74],[100,75],[131,76],[101,77],[102,78],[103,79],[104,80],[105,81],[106,82],[107,83],[108,84],[109,85],[110,86],[111,87],[112,88],[114,89],[113,90],[115,91],[116,92],[118,93],[119,94],[120,95],[121,96],[122,97],[123,98],[124,99],[125,100],[126,101],[127,102],[128,103],[129,104],[245,11],[249,105],[250,11],[275,106],[276,107],[251,108],[254,108],[273,106],[274,106],[264,106],[263,109],[261,106],[256,106],[269,106],[267,106],[271,106],[255,106],[268,106],[272,106],[257,106],[258,106],[270,106],[252,106],[259,106],[260,106],[262,106],[266,106],[277,110],[265,106],[253,106],[290,111],[284,110],[286,112],[285,110],[278,110],[279,110],[281,110],[283,110],[287,112],[288,112],[280,112],[282,112],[292,113],[296,114],[178,115],[180,115],[179,115],[177,115],[187,116],[182,117],[173,115],[174,115],[175,115],[176,115],[223,118],[225,119],[224,118],[222,120],[226,121],[221,122],[200,123],[201,124],[191,125],[190,126],[189,127],[192,128],[188,129]],"exportedModulesMap":[[204,1],[149,2],[151,3],[133,4],[155,5],[156,6],[152,6],[158,7],[153,6],[157,8],[154,9],[140,10],[137,11],[144,12],[138,10],[135,13],[148,14],[142,11],[139,15],[141,16],[194,17],[195,18],[197,19],[193,20],[67,21],[62,22],[63,23],[64,23],[65,24],[66,24],[61,25],[68,26],[69,26],[71,27],[72,26],[73,26],[74,28],[70,26],[170,29],[78,30],[159,31],[162,32],[164,27],[168,33],[169,34],[207,35],[203,1],[205,36],[206,1],[208,11],[161,37],[213,38],[214,39],[216,40],[217,41],[228,42],[227,43],[231,44],[232,45],[230,46],[233,47],[234,48],[235,49],[236,50],[237,51],[238,52],[239,53],[240,54],[241,55],[242,56],[79,57],[80,57],[82,58],[83,59],[84,60],[85,61],[86,62],[87,63],[88,64],[89,65],[90,66],[91,67],[92,67],[93,68],[94,69],[95,70],[96,71],[97,72],[98,73],[99,74],[100,75],[131,76],[101,77],[102,78],[103,79],[104,80],[105,81],[106,82],[107,83],[108,84],[109,85],[110,86],[111,87],[112,88],[114,89],[113,90],[115,91],[116,92],[118,93],[119,94],[120,95],[121,96],[122,97],[123,98],[124,99],[125,100],[126,101],[127,102],[128,103],[129,104],[245,11],[249,105],[250,11],[275,106],[276,107],[251,108],[254,108],[273,106],[274,106],[264,106],[263,109],[261,106],[256,106],[269,106],[267,106],[271,106],[255,106],[268,106],[272,106],[257,106],[258,106],[270,106],[252,106],[259,106],[260,106],[262,106],[266,106],[277,110],[265,106],[253,106],[290,111],[284,110],[286,112],[285,110],[278,110],[279,110],[281,110],[283,110],[287,112],[288,112],[280,112],[282,112],[292,113],[296,114],[178,115],[180,115],[179,115],[177,115],[187,116],[182,117],[173,115],[174,115],[175,115],[176,115],[223,118],[225,119],[224,118],[222,120],[226,121],[221,122],[200,130],[201,124],[191,125],[190,126],[189,127],[192,128],[188,129]],"semanticDiagnosticsPerFile":[204,202,149,132,151,133,150,155,156,152,158,153,157,154,140,137,144,138,135,143,148,145,146,147,142,139,136,141,194,196,195,197,193,60,67,62,63,64,65,66,61,68,69,71,72,73,74,75,76,77,70,170,78,159,162,163,164,165,166,167,168,169,207,203,205,206,208,161,209,210,213,211,214,215,216,217,228,227,212,229,231,232,230,233,234,235,236,237,238,239,240,241,242,243,160,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,81,130,98,99,100,131,101,102,103,104,105,106,107,108,109,110,111,112,114,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,244,245,246,247,249,248,250,275,276,251,254,273,274,264,263,261,256,269,267,271,255,268,272,257,258,270,252,259,260,262,266,277,265,253,290,289,284,286,285,278,279,281,283,287,288,280,282,292,291,293,294,295,296,134,218,181,178,180,179,177,187,182,186,183,185,184,173,174,175,171,172,176,219,223,225,224,222,226,198,221,220,44,45,8,10,9,2,11,12,13,14,15,16,17,18,3,4,19,23,20,21,22,24,25,26,5,27,28,29,30,6,34,31,32,33,35,7,36,41,42,37,38,39,40,1,43,200,199,201,191,190,189,192,188,51,52,53,54,55,56,46,57,58,59,47,48,49,50],"latestChangedDtsFile":"./types/index.d.ts"},"version":"5.2.2"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts b/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts
new file mode 100644
index 0000000..2b9ad4d
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts
@@ -0,0 +1,439 @@
+import type { ControllerGetStateAction } from '@metamask/base-controller';
+import { BaseController, type ControllerStateChangeEvent, type RestrictedControllerMessenger } from '@metamask/base-controller';
+import type { JsonRpcError, DataWithOptionalCause } from '@metamask/rpc-errors';
+import type { Json, OptionalField } from '@metamask/utils';
+export declare const ORIGIN_METAMASK = "metamask";
+export declare const APPROVAL_TYPE_RESULT_ERROR = "result_error";
+export declare const APPROVAL_TYPE_RESULT_SUCCESS = "result_success";
+declare const controllerName = "ApprovalController";
+type ApprovalRequestData = Record<string, Json> | null;
+type ApprovalRequestState = Record<string, Json> | null;
+type ApprovalFlow = {
+    id: string;
+    loadingText: string | null;
+};
+type ResultOptions = {
+    flowToEnd?: string;
+    header?: (string | ResultComponent)[];
+    icon?: string | null;
+    title?: string | null;
+};
+export type ApprovalRequest<RequestData extends ApprovalRequestData> = {
+    /**
+     * The ID of the approval request.
+     */
+    id: string;
+    /**
+     * The origin of the approval request.
+     */
+    origin: string;
+    /**
+     * The time that the request was received, per Date.now().
+     */
+    time: number;
+    /**
+     * The type of the approval request.
+     * Unfortunately, not all values will match the `ApprovalType` enum, so we are using `string` here.
+     * TODO: Replace `string` with `ApprovalType` when all `type` values used by the clients can be encompassed by the `ApprovalType` enum.
+     */
+    type: string;
+    /**
+     * Additional data associated with the request.
+     */
+    requestData: RequestData;
+    /**
+     * Additional mutable state associated with the request
+     */
+    requestState: ApprovalRequestState;
+    /**
+     * Whether the request expects a result object to be returned instead of just the approval value.
+     */
+    expectsResult: boolean;
+};
+export type ApprovalFlowState = ApprovalFlow;
+export type ApprovalControllerState = {
+    pendingApprovals: Record<string, ApprovalRequest<Record<string, Json>>>;
+    pendingApprovalCount: number;
+    approvalFlows: ApprovalFlowState[];
+};
+export type ApprovalControllerMessenger = RestrictedControllerMessenger<typeof controllerName, ApprovalControllerActions, ApprovalControllerEvents, never, never>;
+export type ShowApprovalRequest = () => void | Promise<void>;
+export type ResultComponent = {
+    /**
+     * A unique identifier for this instance of the component.
+     */
+    key: string;
+    /**
+     * The name of the component to render.
+     */
+    name: string;
+    /**
+     * Any properties required by the component.
+     */
+    properties?: Record<string, unknown>;
+    /**
+     * Any child components to render inside the component.
+     */
+    children?: string | ResultComponent | (string | ResultComponent)[];
+};
+export type ApprovalControllerOptions = {
+    messenger: ApprovalControllerMessenger;
+    showApprovalRequest: ShowApprovalRequest;
+    state?: Partial<ApprovalControllerState>;
+    typesExcludedFromRateLimiting?: string[];
+};
+export type AddApprovalOptions = {
+    id?: string;
+    origin: string;
+    type: string;
+    requestData?: Record<string, Json>;
+    requestState?: Record<string, Json>;
+    expectsResult?: boolean;
+};
+export type UpdateRequestStateOptions = {
+    id: string;
+    requestState: Record<string, Json>;
+};
+export type AcceptOptions = {
+    /**
+     * Whether to resolve the returned promise only when the request creator indicates the success of the
+     * post-approval logic using the result callbacks.
+     * If false or unspecified, the promise will resolve immediately.
+     */
+    waitForResult?: boolean;
+};
+export type StartFlowOptions = OptionalField<ApprovalFlow, 'id' | 'loadingText'> & {
+    show?: boolean;
+};
+export type EndFlowOptions = Pick<ApprovalFlow, 'id'>;
+export type SetFlowLoadingTextOptions = ApprovalFlow;
+export type SuccessOptions = ResultOptions & {
+    message?: string | ResultComponent | (string | ResultComponent)[];
+};
+export type ErrorOptions = ResultOptions & {
+    error?: string | ResultComponent | (string | ResultComponent)[];
+};
+export type AcceptResultCallbacks = {
+    /**
+     * Inform the request acceptor that the post-approval logic was successful.
+     *
+     * @param value - An optional value generated by the post-approval logic.
+     */
+    success: (value?: unknown) => void;
+    /**
+     * Inform the request acceptor that the post-approval logic failed.
+     *
+     * @param error - The reason for the failure.
+     */
+    error: (error: Error) => void;
+};
+export type AddResult = {
+    /**
+     * An optional value provided by the request acceptor.
+     */
+    value?: unknown;
+    /**
+     * Callback functions that must be used to indicate to the request acceptor whether the post-approval logic was successful or not.
+     * Will be undefined if the request acceptor did not specify that they want to wait for a result.
+     */
+    resultCallbacks?: AcceptResultCallbacks;
+};
+export type AcceptResult = {
+    /**
+     * An optional value provided by the request creator when indicating a successful result.
+     */
+    value?: unknown;
+};
+export type ApprovalFlowStartResult = ApprovalFlow;
+export type SuccessResult = Record<string, never>;
+export type ErrorResult = Record<string, never>;
+export type ApprovalStateChange = ControllerStateChangeEvent<typeof controllerName, ApprovalControllerState>;
+export type ApprovalControllerEvents = ApprovalStateChange;
+export type GetApprovalsState = ControllerGetStateAction<typeof controllerName, ApprovalControllerState>;
+export type ClearApprovalRequests = {
+    type: `${typeof controllerName}:clearRequests`;
+    handler: (error: JsonRpcError<DataWithOptionalCause>) => void;
+};
+export type AddApprovalRequest = {
+    type: `${typeof controllerName}:addRequest`;
+    handler: (opts: AddApprovalOptions, shouldShowRequest: boolean) => ReturnType<ApprovalController['add']>;
+};
+export type HasApprovalRequest = {
+    type: `${typeof controllerName}:hasRequest`;
+    handler: ApprovalController['has'];
+};
+export type AcceptRequest = {
+    type: `${typeof controllerName}:acceptRequest`;
+    handler: ApprovalController['accept'];
+};
+export type RejectRequest = {
+    type: `${typeof controllerName}:rejectRequest`;
+    handler: ApprovalController['reject'];
+};
+export type UpdateRequestState = {
+    type: `${typeof controllerName}:updateRequestState`;
+    handler: ApprovalController['updateRequestState'];
+};
+export type StartFlow = {
+    type: `${typeof controllerName}:startFlow`;
+    handler: ApprovalController['startFlow'];
+};
+export type EndFlow = {
+    type: `${typeof controllerName}:endFlow`;
+    handler: ApprovalController['endFlow'];
+};
+export type SetFlowLoadingText = {
+    type: `${typeof controllerName}:setFlowLoadingText`;
+    handler: ApprovalController['setFlowLoadingText'];
+};
+export type ShowSuccess = {
+    type: `${typeof controllerName}:showSuccess`;
+    handler: ApprovalController['success'];
+};
+export type ShowError = {
+    type: `${typeof controllerName}:showError`;
+    handler: ApprovalController['error'];
+};
+export type ApprovalControllerActions = GetApprovalsState | ClearApprovalRequests | AddApprovalRequest | HasApprovalRequest | AcceptRequest | RejectRequest | UpdateRequestState | StartFlow | EndFlow | SetFlowLoadingText | ShowSuccess | ShowError;
+/**
+ * Controller for managing requests that require user approval.
+ *
+ * Enables limiting the number of pending requests by origin and type, counting
+ * pending requests, and more.
+ *
+ * Adding a request returns a promise that resolves or rejects when the request
+ * is approved or denied, respectively.
+ */
+export declare class ApprovalController extends BaseController<typeof controllerName, ApprovalControllerState, ApprovalControllerMessenger> {
+    #private;
+    /**
+     * Construct an Approval controller.
+     *
+     * @param options - The controller options.
+     * @param options.showApprovalRequest - Function for opening the UI such that
+     * the request can be displayed to the user.
+     * @param options.messenger - The restricted controller messenger for the Approval controller.
+     * @param options.state - The initial controller state.
+     * @param options.typesExcludedFromRateLimiting - Array of approval types which allow multiple pending approval requests from the same origin.
+     */
+    constructor({ messenger, showApprovalRequest, state, typesExcludedFromRateLimiting, }: ApprovalControllerOptions);
+    /**
+     * Constructor helper for registering this controller's messaging system
+     * actions.
+     */
+    private registerMessageHandlers;
+    /**
+     * Adds an approval request per the given arguments, calls the show approval
+     * request function, and returns the associated approval promise resolving to
+     * an AddResult object.
+     *
+     * There can only be one approval per origin and type. An error is thrown if
+     * attempting to add an invalid or duplicate request.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval request. A random id will be
+     * generated if none is provided.
+     * @param opts.origin - The origin of the approval request.
+     * @param opts.type - The type associated with the approval request.
+     * @param opts.requestData - Additional data associated with the request,
+     * @param opts.requestState - Additional state associated with the request,
+     * if any.
+     * @returns The approval promise resolving to an AddResult object.
+     */
+    addAndShowApprovalRequest(opts: AddApprovalOptions & {
+        expectsResult: true;
+    }): Promise<AddResult>;
+    /**
+     * Adds an approval request per the given arguments, calls the show approval
+     * request function, and returns the associated approval promise resolving
+     * to a value provided during acceptance.
+     *
+     * There can only be one approval per origin and type. An error is thrown if
+     * attempting to add an invalid or duplicate request.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval request. A random id will be
+     * generated if none is provided.
+     * @param opts.origin - The origin of the approval request.
+     * @param opts.type - The type associated with the approval request.
+     * @param opts.requestData - Additional data associated with the request,
+     * @param opts.requestState - Additional state associated with the request,
+     * if any.
+     * @returns The approval promise resolving to a value provided during acceptance.
+     */
+    addAndShowApprovalRequest(opts: AddApprovalOptions): Promise<unknown>;
+    /**
+     * Adds an approval request per the given arguments and returns the approval
+     * promise resolving to an AddResult object.
+     *
+     * There can only be one approval per origin and type. An error is thrown if
+     * attempting to add an invalid or duplicate request.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval request. A random id will be
+     * generated if none is provided.
+     * @param opts.origin - The origin of the approval request.
+     * @param opts.type - The type associated with the approval request.
+     * @param opts.requestData - Additional data associated with the request,
+     * if any.
+     * @returns The approval promise resolving to an AddResult object.
+     */
+    add(opts: AddApprovalOptions & {
+        expectsResult: true;
+    }): Promise<AddResult>;
+    /**
+     * Adds an approval request per the given arguments and returns the approval
+     * promise resolving to a value provided during acceptance.
+     *
+     * There can only be one approval per origin and type. An error is thrown if
+     * attempting to add an invalid or duplicate request.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval request. A random id will be
+     * generated if none is provided.
+     * @param opts.origin - The origin of the approval request.
+     * @param opts.type - The type associated with the approval request.
+     * @param opts.requestData - Additional data associated with the request,
+     * if any.
+     * @returns The approval promise resolving to a value provided during acceptance.
+     */
+    add(opts: AddApprovalOptions): Promise<unknown>;
+    /**
+     * Gets the info for the approval request with the given id.
+     *
+     * @param id - The id of the approval request.
+     * @returns The approval request data associated with the id.
+     */
+    get(id: string): ApprovalRequest<ApprovalRequestData> | undefined;
+    /**
+     * Gets the number of pending approvals, by origin and/or type.
+     *
+     * If only `origin` is specified, all approvals for that origin will be
+     * counted, regardless of type.
+     * If only `type` is specified, all approvals for that type will be counted,
+     * regardless of origin.
+     * If both `origin` and `type` are specified, 0 or 1 will be returned.
+     *
+     * @param opts - The approval count options.
+     * @param opts.origin - An approval origin.
+     * @param opts.type - The type of the approval request.
+     * @returns The current approval request count for the given origin and/or
+     * type.
+     */
+    getApprovalCount(opts?: {
+        origin?: string;
+        type?: string;
+    }): number;
+    /**
+     * Get the total count of all pending approval requests for all origins.
+     *
+     * @returns The total pending approval request count.
+     */
+    getTotalApprovalCount(): number;
+    /**
+     * Checks if there's a pending approval request per the given parameters.
+     * At least one parameter must be specified. An error will be thrown if the
+     * parameters are invalid.
+     *
+     * If `id` is specified, all other parameters will be ignored.
+     * If `id` is not specified, the method will check for requests that match
+     * all of the specified parameters.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The ID to check for.
+     * @param opts.origin - The origin to check for.
+     * @param opts.type - The type to check for.
+     * @returns `true` if a matching approval is found, and `false` otherwise.
+     */
+    has(opts?: {
+        id?: string;
+        origin?: string;
+        type?: string;
+    }): boolean;
+    /**
+     * Resolves the promise of the approval with the given id, and deletes the
+     * approval. Throws an error if no such approval exists.
+     *
+     * @param id - The id of the approval request.
+     * @param value - The value to resolve the approval promise with.
+     * @param options - Options bag.
+     * @returns A promise that either resolves once a result is provided by
+     * the creator of the approval request, or immediately if `options.waitForResult`
+     * is `false` or `undefined`.
+     */
+    accept(id: string, value?: unknown, options?: AcceptOptions): Promise<AcceptResult>;
+    /**
+     * Rejects the promise of the approval with the given id, and deletes the
+     * approval. Throws an error if no such approval exists.
+     *
+     * @param id - The id of the approval request.
+     * @param error - The error to reject the approval promise with.
+     */
+    reject(id: string, error: unknown): void;
+    /**
+     * Rejects and deletes all approval requests.
+     *
+     * @param rejectionError - The JsonRpcError to reject the approval
+     * requests with.
+     */
+    clear(rejectionError: JsonRpcError<DataWithOptionalCause>): void;
+    /**
+     * Updates the request state of the approval with the given id.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval request.
+     * @param opts.requestState - Additional data associated with the request
+     */
+    updateRequestState(opts: UpdateRequestStateOptions): void;
+    /**
+     * Starts a new approval flow.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval flow.
+     * @param opts.loadingText - The loading text that will be associated to the approval flow.
+     * @param opts.show - A flag to determine whether the approval should show to the user.
+     * @returns The object containing the approval flow id.
+     */
+    startFlow(opts?: StartFlowOptions): ApprovalFlowStartResult;
+    /**
+     * Ends the current approval flow.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The id of the approval flow that will be finished.
+     */
+    endFlow({ id }: EndFlowOptions): void;
+    /**
+     * Sets the loading text for the approval flow.
+     *
+     * @param opts - Options bag.
+     * @param opts.id - The approval flow loading text that will be displayed.
+     * @param opts.loadingText - The loading text that will be associated to the approval flow.
+     */
+    setFlowLoadingText({ id, loadingText }: SetFlowLoadingTextOptions): void;
+    /**
+     * Show a success page.
+     *
+     * @param opts - Options bag.
+     * @param opts.message - The message text or components to display in the page.
+     * @param opts.header - The text or components to display in the header of the page.
+     * @param opts.flowToEnd - The ID of the approval flow to end once the success page is approved.
+     * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+     * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+     * @returns Empty object to support future additions.
+     */
+    success(opts?: SuccessOptions): Promise<SuccessResult>;
+    /**
+     * Show an error page.
+     *
+     * @param opts - Options bag.
+     * @param opts.message - The message text or components to display in the page.
+     * @param opts.header - The text or components to display in the header of the page.
+     * @param opts.flowToEnd - The ID of the approval flow to end once the error page is approved.
+     * @param opts.title - The title to display above the message. Shown by default but can be hidden with `null`.
+     * @param opts.icon - The icon to display in the page. Shown by default but can be hidden with `null`.
+     * @returns Empty object to support future additions.
+     */
+    error(opts?: ErrorOptions): Promise<ErrorResult>;
+}
+export default ApprovalController;
+//# sourceMappingURL=ApprovalController.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts.map b/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts.map
new file mode 100644
index 0000000..76f79a1
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/ApprovalController.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ApprovalController.d.ts","sourceRoot":"","sources":["../../src/ApprovalController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/errors.d.ts b/node_modules/@metamask/approval-controller/dist/types/errors.d.ts
new file mode 100644
index 0000000..d80b544
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/errors.d.ts
@@ -0,0 +1,16 @@
+export declare class ApprovalRequestNotFoundError extends Error {
+    constructor(id: string);
+}
+export declare class ApprovalRequestNoResultSupportError extends Error {
+    constructor(id: string);
+}
+export declare class NoApprovalFlowsError extends Error {
+    constructor();
+}
+export declare class EndInvalidFlowError extends Error {
+    constructor(id: string, flowIds: string[]);
+}
+export declare class MissingApprovalFlowError extends Error {
+    constructor(id: string);
+}
+//# sourceMappingURL=errors.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/errors.d.ts.map b/node_modules/@metamask/approval-controller/dist/types/errors.d.ts.map
new file mode 100644
index 0000000..9febd9b
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/errors.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"errors.d.ts","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":"AAAA,qBAAa,4BAA6B,SAAQ,KAAK;gBACzC,EAAE,EAAE,MAAM;CAGvB;AAED,qBAAa,mCAAoC,SAAQ,KAAK;gBAChD,EAAE,EAAE,MAAM;CAKvB;AAED,qBAAa,oBAAqB,SAAQ,KAAK;;CAI9C;AAED,qBAAa,mBAAoB,SAAQ,KAAK;gBAChC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;CAO1C;AAED,qBAAa,wBAAyB,SAAQ,KAAK;gBACrC,EAAE,EAAE,MAAM;CAGvB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/index.d.ts b/node_modules/@metamask/approval-controller/dist/types/index.d.ts
new file mode 100644
index 0000000..995c8ee
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/index.d.ts
@@ -0,0 +1,3 @@
+export * from './ApprovalController';
+export * from './errors';
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@metamask/approval-controller/dist/types/index.d.ts.map b/node_modules/@metamask/approval-controller/dist/types/index.d.ts.map
new file mode 100644
index 0000000..6f1777e
--- /dev/null
+++ b/node_modules/@metamask/approval-controller/dist/types/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,sBAAsB,CAAC;AACrC,cAAc,UAAU,CAAC"}
\ No newline at end of file
