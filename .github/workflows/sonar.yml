name: Sonar
on:
  push:
    branches:
      - main
      - fix/remove-sonar-config
jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - name: Get Yarn cache directory
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> "$GITHUB_OUTPUT"
        id: yarn-cache-dir
      - name: Get Yarn version
        run: echo "YARN_VERSION=$(yarn --version)" >> "$GITHUB_OUTPUT"
        id: yarn-version
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ steps.yarn-version.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Determine whether the current PR is a draft
        id: set-is-draft
        if: github.event_name == 'pull_request' && github.event.pull_request.number
        run: echo "IS_DRAFT=$(gh pr view --json isDraft --jq '.isDraft' "${PR_NUMBER}")" >> "$GITHUB_OUTPUT"
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup registry config for using package previews on draft PRs
        if: github.event_name == 'pull_request' && steps.set-is-draft.outputs.IS_DRAFT == 'true'
        run: printf '%s\n\n%s' '@metamask:registry=https://npm.pkg.github.com' "//npm.pkg.github.com/:_authToken=${PACKAGE_READ_TOKEN}" > .npmrc
        env:
          PACKAGE_READ_TOKEN: ${{ secrets.PACKAGE_READ_TOKEN }}
      - run: yarn setup
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi
  tests:
    runs-on: ubuntu-20.04
    needs: setup
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn test:unit --forceExit --silent
        env:
          NODE_OPTIONS: --max_old_space_size=20480
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi
  build:
    name: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@427bad70165a74f9d7133d48ea31b482a53ee9fa
        with:
          projectBaseDir: app/
          args: >
            -Dsonar.javascript.lcov.reportPaths=tests/coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}