name: Create Tag on Label

on:
  pull_request:
    types: [labeled]

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { context: ghContext, github } = require("@actions/github");
            const { pull_request, label, repository } = ghContext.payload;

            if (label.name === 'Run E2E') {
              const tagName = `pr-e2e-${pull_request.number}`;
              const tagMessage = `Tag created for PR #${pull_request.number}`;
              const { data: ref } = await github.git.getRef({
                owner: repository.owner.login,
                repo: repository.name,
                ref: `heads/${pull_request.head.ref}`,
              });

              await github.git.createRef({
                owner: repository.owner.login,
                repo: repository.name,
                ref: `refs/tags/${tagName}`,
                sha: ref.object.sha,
              });

              console.log(`Created tag ${tagName}`);
            }

# name: Bitrise E2E

# on:
#   pull_request:
#     types: [labeled]

# jobs:
#   deploy:
#     name: Run e2e smoke test on Bitrise
#     runs-on: ubuntu-latest
#     steps:
#       - name: Start pr_smoke_e2e_pipeline workflow in Bitrise
#         if: contains(github.event.pull_request.labels.*.name, 'needs-smoke-e2e')
#         run: |
#           curl https://app.bitrise.io/app/${{ secrets.BITRISE_APP_ID }}/build/start.json -L -H 'Content-Type: application/json' --data '{
#             "hook_info": {
#               "type": "bitrise",
#               "build_trigger_token": "${{ secrets.BITRISE_BUILD_TRIGGER_TOKEN }}"
#             },
#             "build_params": {
#               "branch": "${{ github.head_ref }}",
#               "pipeline_id": "pr_smoke_e2e_pipeline"
#             },
#             "triggered_by": "curl"
#           }'
