name: ci
on:
  push:
    branches: test-set-output
  pull_request:
jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $NODE_VERSION
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - name: Get Yarn cache directory
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $YARN_CACHE_DIR
        id: yarn-cache-dir
      - name: Get Yarn version
        run: echo "YARN_VERSION=$(yarn --version)" >> $YARN_VERSION
        id: yarn-version
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ steps.yarn-version.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn setup
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
  lint:
    runs-on: ubuntu-20.04
    needs: setup
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $NODE_VERSION
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn lint
  audit:
    runs-on: ubuntu-20.04
    needs: setup
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $NODE_VERSION
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn audit:ci
  tgz-check:
    runs-on: ubuntu-20.04
    needs: setup
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $NODE_VERSION
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn test:tgz-check
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        units:
          - non-components
          - components-ui
          - components-views
          - components-remaining
    needs: setup
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $NODE_VERSION
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn test:unit:${{ matrix['units'] }} --forceExit --silent
        env:
          NODE_OPTIONS: --max_old_space_size=20480
  all-jobs-pass:
    name: All jobs pass
    runs-on: ubuntu-20.04
    needs: [setup, lint, audit, tgz-check, test]
    steps:
      - run: echo "Great success!"
