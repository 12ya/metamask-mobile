name: Run Bitrise E2E Smoke Tests

on:
  pull_request:
    types: [opened, ready_for_review, labeled]

env:
  E2E_LABEL: 'Run Smoke E2E'
  E2E_PIPELINE: 'pr_smoke_e2e_pipeline'

jobs:
  check-e2e-trigger:
    runs-on: ubuntu-latest
    outputs:
      shouldRunE2E: ${{ steps.trigger-check.outputs.result }}
    steps:
      - name: Check for E2E trigger
        uses: actions/github-script@v5
        id: trigger-check
        with:
          script: |
            const e2eLabel = process.env.E2E_LABEL;
            const triggerAction = context.payload.action;
            let shouldTriggerE2E;

            console.log(`Workflow triggered by the event (${triggerAction})`);

            switch (triggerAction) {
              case 'opened':
                shouldTriggerE2E = !context.payload.pull_request.draft
                if (!shouldTriggerE2E) {
                  console.log(`Skipping E2E smoke since opened PR is in draft.`)
                } else {
                  console.log(`Starting E2E smoke since opened PR is ready for review.`)
                }
                break;
              case 'ready_for_review':
                shouldTriggerE2E = true;
                console.log(`Starting E2E smoke since PR has changed to ready for review.`)
                break;
              case 'labeled':
                shouldTriggerE2E = e2eLabel === context.payload.label.name
                if (!shouldTriggerE2E) {
                  console.log(`Skipping E2E smoke since (${e2eLabel}) is not the label that triggered this workflow.`)
                } else {
                  console.log(`Starting E2E smoke since (${e2eLabel}) is the label that triggered this workflow.`)
                }
                break;
            }

            return shouldTriggerE2E;

  run-bitrise-e2e:
    needs: check-e2e-trigger
    if: needs.check-e2e-trigger.outputs.shouldRunE2E == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn

      - name: Install Axios
        run: yarn add axios

      - name: Install dependencies
        run: yarn --immutable

      - name: Run Bitrise E2E
        env:
          BITRISE_BUILD_TRIGGER_TOKEN: ${{ secrets.BITRISE_BUILD_TRIGGER_TOKEN }}
          BITRISE_APP_ID: 'be69d4368ee7e86d'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn run run-bitrise-e2e
